name: tcc

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: ubuntu-tcc-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout TinyCC repository
      run: |
          git clone https://github.com/mirror/tinycc.git
          cd tinycc
          git checkout mob
          git reset --hard 917aad3bcfbb534875aa6d66609bdb36459460a4

    - name: Compiling and installing TinyCC
      working-directory: tinycc
      run: |
          sh ./configure --prefix=/usr
          make -j
          sudo make install

    - uses: actions/checkout@v2
    - name: Checkout our Testsuite Binaries
      uses: actions/checkout@v2
      with:
          repository: radareorg/radare2-testbins
          path: test/bins

    - name: Install dependencies
      run: |
        sudo apt-get --assume-yes install gperf wheel setuptools || true
        sudo python -m pip install --upgrade pip
        pip install r2pipe
    - name: Configure, build and install
      env:
          CC: tcc
      run: |
          ./configure --prefix=/usr --with-compiler=tcc
          make -j
          sudo make install

    - name: Run tests
      env:
        PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig
      run: |
        r2 -v
        r2r -v
        export R2R_SKIP_ASM=1
        export R2R_SKIP_ARCHOS=1
        make -C test
  nodbg:
    name: ubuntu-tcc-nodbg
    runs-on: ubuntu-latest
    steps:
    - name: Checkout TinyCC repository
      run: |
          git clone https://github.com/mirror/tinycc.git
          cd tinycc && git checkout mob
          git reset --hard 917aad3bcfbb534875aa6d66609bdb36459460a4
          sudo apt-get --assume-yes install gperf wheel setuptools || true
          sudo python -m pip install --upgrade pip
          pip install r2pipe
    - name: Compiling and installing TinyCC
      working-directory: tinycc
      run: |
          sh ./configure --prefix=/usr --without-debugger
          make -j && sudo make install
    - uses: actions/checkout@v2
    - name: Checkout our Testsuite Binaries
      uses: actions/checkout@v2
      with:
          repository: radareorg/radare2-testbins
          path: test/bins
    - name: Configure, build and install
      env:
          CC: tcc
      run: |
          ./configure --prefix=/usr --with-compiler=tcc
          make -j
          sudo make install

    - name: Run tests
      env:
        PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig
      run: |
        r2 -v
        r2r -v
        export R2R_SKIP_ASM=1
        export R2R_SKIP_ARCHOS=1
        make -C test
  r2pm:
    name: r2pm-tcc
    runs-on: ubuntu-latest
    steps:
    - name: Checkout TinyCC repository
      run: |
          git clone https://github.com/mirror/tinycc.git
          cd tinycc
          git checkout mob
          git reset --hard 917aad3bcfbb534875aa6d66609bdb36459460a4
    - name: Compiling and installing TinyCC
      working-directory: tinycc
      run: |
          sh ./configure --prefix=/usr
          make -j
          sudo make install
    - uses: actions/checkout@v2
    - name: Configure, build and install
      env:
          CC: tcc
          CFLAGS: -O0
      run: |
          ./configure --prefix=/usr --with-compiler=tcc
          make -j
          sudo make install
    - name: Initialize and update the r2pm package database
      run: r2pm -U
    - name: Install samurai
      run: r2pm -i samurai
    - name: Install samurai (clean)
      run: r2pm -ci samurai
    - name: Install samurai (native)
      run: r2pm -i samurai
    - name: Install muon
      run: r2pm -i muon
    - name: Install muon (native)
      run: r2pm -i muon
    - name: Building r2 with muon+samu
      run: |
          r2pm -r muon setup b
          r2pm -r samu -j4 -C b >/dev/null

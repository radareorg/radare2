name: linux

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  linux-wasi:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing with symlinks
      run: |
        sys/wasi.sh
    - uses: actions/upload-artifact@v2
      with:
        name: linux-wasi
        path: radare2-*-wasi.zip
  linux-static:
    if: contains(github.ref, 'master') || contains(github.ref, 'ci-')
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing the musl runtime
      run: |
        sudo apt install musl-tools
    - name: Building static r2 with acr
      run: |
        cp -f dist/plugins-cfg/plugins.static.nogpl.cfg plugins.cfg
        NOLTO=1 sys/static.sh
        # NOLTO=1 sys/static.sh
        make -C binr/blob
        tar cJvf r2-static.tar.xz r2-static
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        name: linux-static
        path: r2-static.tar.xz
        retention-days: 30
  linux-acr-deb-64:
    if: contains(github.ref, 'master') || contains(github.ref, 'ci-')
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Packaging for Debian
      run: sys/debian.sh
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        name: linux-acr-deb-64
        path: dist/debian/*/*.deb
  linux-acr-deb-32:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Packaging for 32bit Debian
      run: |
        sudo apt install gcc-multilib gperf
        export CFLAGS=-m32
        export LDFLAGS=-m32
        export ARCH=i386
        sys/debian.sh
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        name: linux-acr-deb-32
        path: dist/debian/*/*.deb
## RPM PACKAGES DISABLED
#  linux-meson-rpm:
#    runs-on: ubuntu:18.04
#    container: centos:8
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#    - name: Prepare Skeleton
#      run: |
#        mkdir -p SOURCES SPECS
#        cp -f dist/rpm/*spec SPECS
#        wget -O https://github.com/radareorg/radare2/archive/master/radare2-5.1.0-git.tar.gz
#    - name: rpmbuild
#      uses: robertdebock/rpmbuild-action@1.1.1
#    - name: Pub
#      uses: actions/upload-artifact@v2
#      with:
#        name: linux-meson-rpm
#        path: RPMS/*/*.rpm *.rpm dist/rpm/*.rpm
#  centos-meson-rpm:
#    runs-on: ubuntu:18.04
#    container: centos:8
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#    - name: Install tools for CentOS:8
#      run: |
#        yum install -y patch unzip git gcc make python38 python38-pip rpm-build rpmdevtools wget
#        pip3.8 install meson ninja r2pipe
#    - name: Building with Meson
#      run: |
#        meson build
#        ninja -C build
#        ninja -C build install
#    - name: RPM Packaging
#      run: |
#        cp -f dist/rpm/radare2.spec .
#        rpmdev-setuptree
#        mkdir -p rpmbuild/SOURCES
#        cd rpmbuild/SOURCES
#        wget https://github.com/radareorg/radare2/archive/5860c3efc12d4b75e72bdce4b1d3834599620913/radare2-5.1.0-git.tar.gz
#        cd -
#        rpmbuild -ba radare2.spec
#    - name: Pub
#      uses: actions/upload-artifact@v2
#      with:
#        name: centos-meson-rpm
#        path: rpmbuild/RPMS/*/*.rpm

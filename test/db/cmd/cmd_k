NAME=1: k syscall/
FILE=malloc://512
ARGS=-a x86 -k linux
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
e asm.os=linux
k syscall/0x80.4
EOF
EXPECT=<<EOF
stat
EOF
RUN

NAME=2: k syscall/
FILE=malloc://512
ARGS=-a x86 -k linux
CMDS=<<EOF
e asm.arch=x86
e asm.bits=64
e asm.os=linux
k syscall/stat
EOF
EXPECT=<<EOF
0x80,4,2,
EOF
RUN

NAME=3: test kj
FILE=bins/elf/ioli/crackme0x03
ARGS=-A -e bin.types=true
CMDS=<<EOF
kj~{}
EOF
EXPECT=<<EOF
{
  "anal": {
    "cur_cmd": [
      "types",
      "*aligned_alloc=func",
      "_Exit=func",
      "__assert_fail=func",
      "__bzero=func",
      "__cxa_throw=func",
      "__error=func",
      "__libc_init=func",
      "__libc_init_array=func",
      "__libc_start_main=func",
      "__maskrune=func",
      "__stack_chk_fail=func",
      "__tolower=func",
      "__toupper=func",
      "__uClibc_main=func",
      "_exit=func",
      "_sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF=func",
      "abort=func",
      "abs=func",
      "access=func",
      "acos=func",
      "acosf=func",
      "acosh=func",
      "acoshf=func",
      "acoshl=func",
      "acosl=func",
      "addr.8048360.noreturn=true",
      "arc4random=func",
      "asctime=func",
      "asin=func",
      "asinf=func",
      "asinh=func",
      "asinhf=func",
      "asinhl=func",
      "asinl=func",
      "at_quick_exit=func",
      "atan=func",
      "atan2=func",
      "atan2f=func",
      "atan2l=func",
      "atanf=func",
      "atanh=func",
      "atanhf=func",
      "atanhl=func",
      "atanl=func",
      "atexit=func",
      "atof=func",
      "atoi=func",
      "atol=func",
      "atoll=func",
      "basename=func",
      "bind=func",
      "bindtextdomain=func",
      "bsearch=func",
      "btowc=func",
      "bzero=func",
      "calloc=func",
      "cbrt=func",
      "cbrtf=func",
      "cbrtl=func",
      "ceil=func",
      "ceilf=func",
      "ceill=func",
      "char=type",
      "char *=type",
      "char **=type",
      "chmod=func",
      "clearerr=func",
      "clock=func",
      "close=func",
      "compat_mode=func",
      "connect=func",
      "copysign=func",
      "copysignf=func",
      "copysignl=func",
      "cos=func",
      "cosf=func",
      "cosh=func",
      "coshf=func",
      "coshl=func",
      "cosl=func",
      "ctime=func",
      "difftime=func",
      "div=func",
      "double=type",
      "elf_class=enum",
      "elf_data=enum",
      "elf_hdr_version=enum",
      "elf_machine=enum",
      "elf_obj_version=enum",
      "elf_p_flags=enum",
      "elf_p_type=enum",
      "elf_s_flags_32=enum",
      "elf_s_type=enum",
      "elf_type=enum",
      "enum.elf_class=ELFCLASSNONE,ELFCLASS32,ELFCLASS64",
      "enum.elf_class.0x0=ELFCLASSNONE",
      "enum.elf_class.0x1=ELFCLASS32",
      "enum.elf_class.0x2=ELFCLASS64",
      "enum.elf_class.ELFCLASS32=0x1",
      "enum.elf_class.ELFCLASS64=0x2",
      "enum.elf_class.ELFCLASSNONE=0x0",
      "enum.elf_data=ELFDATANONE,ELFDATA2LSB,ELFDATA2MSB",
      "enum.elf_data.0x0=ELFDATANONE",
      "enum.elf_data.0x1=ELFDATA2LSB",
      "enum.elf_data.0x2=ELFDATA2MSB",
      "enum.elf_data.ELFDATA2LSB=0x1",
      "enum.elf_data.ELFDATA2MSB=0x2",
      "enum.elf_data.ELFDATANONE=0x0",
      "enum.elf_hdr_version=EV_NONE,EV_CURRENT",
      "enum.elf_hdr_version.0x0=EV_NONE",
      "enum.elf_hdr_version.0x1=EV_CURRENT",
      "enum.elf_hdr_version.EV_CURRENT=0x1",
      "enum.elf_hdr_version.EV_NONE=0x0",
      "enum.elf_machine=EM_NONE,EM_M32,EM_SPARC,EM_386,EM_68K,EM_88K,EM_IAMCU,EM_860,EM_MIPS,EM_S370,EM_MIPS_RS3_LE,EM_RS6000,EM_PARISC,EM_nCUBE,EM_VPP500,EM_SPARC32PLUS,EM_960,EM_PPC,EM_PPC64,EM_S390,EM_SPU,EM_V800,EM_FR20,EM_RH32,EM_RCE,EM_ARM,EM_ALPHA,EM_SH,EM_SPARCV9,EM_TRICORE,EM_ARC,EM_H8_300,EM_H8_300H,EM_H8S,EM_H8_500,EM_IA_64,EM_MIPS_X,EM_COLDFIRE,EM_68HC12,EM_MMA,EM_PCP,EM_NCPU,EM_NDR1,EM_STARCORE,EM_ME16,EM_ST100,EM_TINYJ,EM_X86_64,EM_PDSP,EM_PDP10,EM_PDP11,EM_FX66,EM_ST9PLUS,EM_ST7,EM_68HC16,EM_68HC11,EM_68HC08,EM_68HC05,EM_SVX,EM_ST19,EM_VAX,EM_CRIS,EM_JAVELIN,EM_FIREPATH,EM_ZSP,EM_MMIX,EM_HUANY,EM_PRISM,EM_AVR,EM_FR30,EM_D10V,EM_D30V,EM_V850,EM_M32R,EM_MN10300,EM_MN10200,EM_PJ,EM_OPENRISC,EM_ARC_COMPACT,EM_XTENSA,EM_VIDEOCORE,EM_TMM_GPP,EM_NS32K,EM_TPC,EM_SNP1K,EM_ST200,EM_IP2K,EM_MAX,EM_CR,EM_F2MC16,EM_MSP430,EM_BLACKFIN,EM_SE_C33,EM_SEP,EM_ARCA,EM_UNICORE,EM_EXCESS,EM_DXP,EM_ALTERA_NIOS2,EM_CRX,EM_XGATE,EM_C166,EM_M16C,EM_DSPIC30F,EM_CE,EM_M32C,EM_TSK3000,EM_RS08,EM_SHARC,EM_ECOG2,EM_SCORE7,EM_DSP24,EM_VIDEOCORE3,EM_LATTICEMICO32,EM_SE_C17,EM_TI_C6000,EM_TI_C2000,EM_TI_C5500,EM_TI_ARP32,EM_TI_PRU,EM_MMDSP_PLUS,EM_CYPRESS_M8C,EM_R32C,EM_TRIMEDIA,EM_QDSP6,EM_8051,EM_STXP7X,EM_NDS32,EM_ECOG1X,EM_MAXQ30,EM_XIMO16,EM_MANIK,EM_CRAYNV2,EM_RX,EM_METAG,EM_MCST_ELBRUS,EM_ECOG16,EM_CR16,EM_ETPU,EM_SLE9X,EM_L10M,EM_K10M,EM_AARCH64,EM_AVR32,EM_STM8,EM_TILE64,EM_TILEPRO,EM_CUDA,EM_TILEGX,EM_CLOUDSHIELD,EM_COREA_1ST,EM_COREA_2ND,EM_ARC_COMPACT2,EM_OPEN8,EM_RL78,EM_VIDEOCORE5,EM_78KOR,EM_56800EX,EM_BA1,EM_BA2,EM_XCORE,EM_MCHP_PIC,EM_INTEL205,EM_INTEL206,EM_INTEL207,EM_INTEL208,EM_INTEL209,EM_KM32,EM_KMX32,EM_KMX16,EM_KMX8,EM_KVARC,EM_CDP,EM_COGE,EM_COOL,EM_NORC,EM_CSR_KALIMBA,EM_AMDGPU,EM_RISCV,EM_LANAI,EM_BPF,EM_CSKY,EM_KVX,EM_LOONGARCH",
      "enum.elf_machine.0x0=EM_NONE",
      "enum.elf_machine.0x1=EM_M32",
      "enum.elf_machine.0x10=EM_nCUBE",
      "enum.elf_machine.0x100=EM_KVX",
      "enum.elf_machine.0x102=EM_LOONGARCH",
      "enum.elf_machine.0x11=EM_VPP500",
      "enum.elf_machine.0x12=EM_SPARC32PLUS",
      "enum.elf_machine.0x13=EM_960",
      "enum.elf_machine.0x14=EM_PPC",
      "enum.elf_machine.0x15=EM_PPC64",
      "enum.elf_machine.0x16=EM_S390",
      "enum.elf_machine.0x17=EM_SPU",
      "enum.elf_machine.0x2=EM_SPARC",
      "enum.elf_machine.0x24=EM_V800",
      "enum.elf_machine.0x25=EM_FR20",
      "enum.elf_machine.0x26=EM_RH32",
      "enum.elf_machine.0x27=EM_RCE",
      "enum.elf_machine.0x28=EM_ARM",
      "enum.elf_machine.0x29=EM_ALPHA",
      "enum.elf_machine.0x2a=EM_SH",
      "enum.elf_machine.0x2b=EM_SPARCV9",
      "enum.elf_machine.0x2c=EM_TRICORE",
      "enum.elf_machine.0x2d=EM_ARC",
      "enum.elf_machine.0x2e=EM_H8_300",
      "enum.elf_machine.0x2f=EM_H8_300H",
      "enum.elf_machine.0x3=EM_386",
      "enum.elf_machine.0x30=EM_H8S",
      "enum.elf_machine.0x31=EM_H8_500",
      "enum.elf_machine.0x32=EM_IA_64",
      "enum.elf_machine.0x33=EM_MIPS_X",
      "enum.elf_machine.0x34=EM_COLDFIRE",
      "enum.elf_machine.0x35=EM_68HC12",
      "enum.elf_machine.0x36=EM_MMA",
      "enum.elf_machine.0x37=EM_PCP",
      "enum.elf_machine.0x38=EM_NCPU",
      "enum.elf_machine.0x39=EM_NDR1",
      "enum.elf_machine.0x3a=EM_STARCORE",
      "enum.elf_machine.0x3b=EM_ME16",
      "enum.elf_machine.0x3c=EM_ST100",
      "enum.elf_machine.0x3d=EM_TINYJ",
      "enum.elf_machine.0x3e=EM_X86_64",
      "enum.elf_machine.0x3f=EM_PDSP",
      "enum.elf_machine.0x4=EM_68K",
      "enum.elf_machine.0x40=EM_PDP10",
      "enum.elf_machine.0x41=EM_PDP11",
      "enum.elf_machine.0x42=EM_FX66",
      "enum.elf_machine.0x43=EM_ST9PLUS",
      "enum.elf_machine.0x44=EM_ST7",
      "enum.elf_machine.0x45=EM_68HC16",
      "enum.elf_machine.0x46=EM_68HC11",
      "enum.elf_machine.0x47=EM_68HC08",
      "enum.elf_machine.0x48=EM_68HC05",
      "enum.elf_machine.0x49=EM_SVX",
      "enum.elf_machine.0x4a=EM_ST19",
      "enum.elf_machine.0x4b=EM_VAX",
      "enum.elf_machine.0x4c=EM_CRIS",
      "enum.elf_machine.0x4d=EM_JAVELIN",
      "enum.elf_machine.0x4e=EM_FIREPATH",
      "enum.elf_machine.0x4f=EM_ZSP",
      "enum.elf_machine.0x5=EM_88K",
      "enum.elf_machine.0x50=EM_MMIX",
      "enum.elf_machine.0x51=EM_HUANY",
      "enum.elf_machine.0x52=EM_PRISM",
      "enum.elf_machine.0x53=EM_AVR",
      "enum.elf_machine.0x54=EM_FR30",
      "enum.elf_machine.0x55=EM_D10V",
      "enum.elf_machine.0x56=EM_D30V",
      "enum.elf_machine.0x57=EM_V850",
      "enum.elf_machine.0x58=EM_M32R",
      "enum.elf_machine.0x59=EM_MN10300",
      "enum.elf_machine.0x5a=EM_MN10200",
      "enum.elf_machine.0x5b=EM_PJ",
      "enum.elf_machine.0x5c=EM_OPENRISC",
      "enum.elf_machine.0x5d=EM_ARC_COMPACT",
      "enum.elf_machine.0x5e=EM_XTENSA",
      "enum.elf_machine.0x5f=EM_VIDEOCORE",
      "enum.elf_machine.0x6=EM_IAMCU",
      "enum.elf_machine.0x60=EM_TMM_GPP",
      "enum.elf_machine.0x61=EM_NS32K",
      "enum.elf_machine.0x62=EM_TPC",
      "enum.elf_machine.0x63=EM_SNP1K",
      "enum.elf_machine.0x64=EM_ST200",
      "enum.elf_machine.0x65=EM_IP2K",
      "enum.elf_machine.0x66=EM_MAX",
      "enum.elf_machine.0x67=EM_CR",
      "enum.elf_machine.0x68=EM_F2MC16",
      "enum.elf_machine.0x69=EM_MSP430",
      "enum.elf_machine.0x6a=EM_BLACKFIN",
      "enum.elf_machine.0x6b=EM_SE_C33",
      "enum.elf_machine.0x6c=EM_SEP",
      "enum.elf_machine.0x6d=EM_ARCA",
      "enum.elf_machine.0x6e=EM_UNICORE",
      "enum.elf_machine.0x6f=EM_EXCESS",
      "enum.elf_machine.0x7=EM_860",
      "enum.elf_machine.0x70=EM_DXP",
      "enum.elf_machine.0x71=EM_ALTERA_NIOS2",
      "enum.elf_machine.0x72=EM_CRX",
      "enum.elf_machine.0x73=EM_XGATE",
      "enum.elf_machine.0x74=EM_C166",
      "enum.elf_machine.0x75=EM_M16C",
      "enum.elf_machine.0x76=EM_DSPIC30F",
      "enum.elf_machine.0x77=EM_CE",
      "enum.elf_machine.0x78=EM_M32C",
      "enum.elf_machine.0x8=EM_MIPS",
      "enum.elf_machine.0x83=EM_TSK3000",
      "enum.elf_machine.0x84=EM_RS08",
      "enum.elf_machine.0x85=EM_SHARC",
      "enum.elf_machine.0x86=EM_ECOG2",
      "enum.elf_machine.0x87=EM_SCORE7",
      "enum.elf_machine.0x88=EM_DSP24",
      "enum.elf_machine.0x89=EM_VIDEOCORE3",
      "enum.elf_machine.0x8a=EM_LATTICEMICO32",
      "enum.elf_machine.0x8b=EM_SE_C17",
      "enum.elf_machine.0x8c=EM_TI_C6000",
      "enum.elf_machine.0x8d=EM_TI_C2000",
      "enum.elf_machine.0x8e=EM_TI_C5500",
      "enum.elf_machine.0x8f=EM_TI_ARP32",
      "enum.elf_machine.0x9=EM_S370",
      "enum.elf_machine.0x90=EM_TI_PRU",
      "enum.elf_machine.0xa=EM_MIPS_RS3_LE",
      "enum.elf_machine.0xa0=EM_MMDSP_PLUS",
      "enum.elf_machine.0xa1=EM_CYPRESS_M8C",
      "enum.elf_machine.0xa2=EM_R32C",
      "enum.elf_machine.0xa3=EM_TRIMEDIA",
      "enum.elf_machine.0xa4=EM_QDSP6",
      "enum.elf_machine.0xa5=EM_8051",
      "enum.elf_machine.0xa6=EM_STXP7X",
      "enum.elf_machine.0xa7=EM_NDS32",
      "enum.elf_machine.0xa8=EM_ECOG1X",
      "enum.elf_machine.0xa9=EM_MAXQ30",
      "enum.elf_machine.0xaa=EM_XIMO16",
      "enum.elf_machine.0xab=EM_MANIK",
      "enum.elf_machine.0xac=EM_CRAYNV2",
      "enum.elf_machine.0xad=EM_RX",
      "enum.elf_machine.0xae=EM_METAG",
      "enum.elf_machine.0xaf=EM_MCST_ELBRUS",
      "enum.elf_machine.0xb=EM_RS6000",
      "enum.elf_machine.0xb0=EM_ECOG16",
      "enum.elf_machine.0xb1=EM_CR16",
      "enum.elf_machine.0xb2=EM_ETPU",
      "enum.elf_machine.0xb3=EM_SLE9X",
      "enum.elf_machine.0xb4=EM_L10M",
      "enum.elf_machine.0xb5=EM_K10M",
      "enum.elf_machine.0xb7=EM_AARCH64",
      "enum.elf_machine.0xb9=EM_AVR32",
      "enum.elf_machine.0xba=EM_STM8",
      "enum.elf_machine.0xbb=EM_TILE64",
      "enum.elf_machine.0xbc=EM_TILEPRO",
      "enum.elf_machine.0xbe=EM_CUDA",
      "enum.elf_machine.0xbf=EM_TILEGX",
      "enum.elf_machine.0xc0=EM_CLOUDSHIELD",
      "enum.elf_machine.0xc1=EM_COREA_1ST",
      "enum.elf_machine.0xc2=EM_COREA_2ND",
      "enum.elf_machine.0xc3=EM_ARC_COMPACT2",
      "enum.elf_machine.0xc4=EM_OPEN8",
      "enum.elf_machine.0xc5=EM_RL78",
      "enum.elf_machine.0xc6=EM_VIDEOCORE5",
      "enum.elf_machine.0xc7=EM_78KOR",
      "enum.elf_machine.0xc8=EM_56800EX",
      "enum.elf_machine.0xc9=EM_BA1",
      "enum.elf_machine.0xca=EM_BA2",
      "enum.elf_machine.0xcb=EM_XCORE",
      "enum.elf_machine.0xcc=EM_MCHP_PIC",
      "enum.elf_machine.0xcd=EM_INTEL205",
      "enum.elf_machine.0xce=EM_INTEL206",
      "enum.elf_machine.0xcf=EM_INTEL207",
      "enum.elf_machine.0xd0=EM_INTEL208",
      "enum.elf_machine.0xd1=EM_INTEL209",
      "enum.elf_machine.0xd2=EM_KM32",
      "enum.elf_machine.0xd3=EM_KMX32",
      "enum.elf_machine.0xd4=EM_KMX16",
      "enum.elf_machine.0xd5=EM_KMX8",
      "enum.elf_machine.0xd6=EM_KVARC",
      "enum.elf_machine.0xd7=EM_CDP",
      "enum.elf_machine.0xd8=EM_COGE",
      "enum.elf_machine.0xd9=EM_COOL",
      "enum.elf_machine.0xda=EM_NORC",
      "enum.elf_machine.0xdb=EM_CSR_KALIMBA",
      "enum.elf_machine.0xe0=EM_AMDGPU",
      "enum.elf_machine.0xf=EM_PARISC",
      "enum.elf_machine.0xf3=EM_RISCV",
      "enum.elf_machine.0xf4=EM_LANAI",
      "enum.elf_machine.0xf7=EM_BPF",
      "enum.elf_machine.0xfc=EM_CSKY",
      "enum.elf_machine.EM_386=0x3",
      "enum.elf_machine.EM_56800EX=0xc8",
      "enum.elf_machine.EM_68HC05=0x48",
      "enum.elf_machine.EM_68HC08=0x47",
      "enum.elf_machine.EM_68HC11=0x46",
      "enum.elf_machine.EM_68HC12=0x35",
      "enum.elf_machine.EM_68HC16=0x45",
      "enum.elf_machine.EM_68K=0x4",
      "enum.elf_machine.EM_78KOR=0xc7",
      "enum.elf_machine.EM_8051=0xa5",
      "enum.elf_machine.EM_860=0x7",
      "enum.elf_machine.EM_88K=0x5",
      "enum.elf_machine.EM_960=0x13",
      "enum.elf_machine.EM_AARCH64=0xb7",
      "enum.elf_machine.EM_ALPHA=0x29",
      "enum.elf_machine.EM_ALTERA_NIOS2=0x71",
      "enum.elf_machine.EM_AMDGPU=0xe0",
      "enum.elf_machine.EM_ARC=0x2d",
      "enum.elf_machine.EM_ARCA=0x6d",
      "enum.elf_machine.EM_ARC_COMPACT=0x5d",
      "enum.elf_machine.EM_ARC_COMPACT2=0xc3",
      "enum.elf_machine.EM_ARM=0x28",
      "enum.elf_machine.EM_AVR=0x53",
      "enum.elf_machine.EM_AVR32=0xb9",
      "enum.elf_machine.EM_BA1=0xc9",
      "enum.elf_machine.EM_BA2=0xca",
      "enum.elf_machine.EM_BLACKFIN=0x6a",
      "enum.elf_machine.EM_BPF=0xf7",
      "enum.elf_machine.EM_C166=0x74",
      "enum.elf_machine.EM_CDP=0xd7",
      "enum.elf_machine.EM_CE=0x77",
      "enum.elf_machine.EM_CLOUDSHIELD=0xc0",
      "enum.elf_machine.EM_COGE=0xd8",
      "enum.elf_machine.EM_COLDFIRE=0x34",
      "enum.elf_machine.EM_COOL=0xd9",
      "enum.elf_machine.EM_COREA_1ST=0xc1",
      "enum.elf_machine.EM_COREA_2ND=0xc2",
      "enum.elf_machine.EM_CR=0x67",
      "enum.elf_machine.EM_CR16=0xb1",
      "enum.elf_machine.EM_CRAYNV2=0xac",
      "enum.elf_machine.EM_CRIS=0x4c",
      "enum.elf_machine.EM_CRX=0x72",
      "enum.elf_machine.EM_CSKY=0xfc",
      "enum.elf_machine.EM_CSR_KALIMBA=0xdb",
      "enum.elf_machine.EM_CUDA=0xbe",
      "enum.elf_machine.EM_CYPRESS_M8C=0xa1",
      "enum.elf_machine.EM_D10V=0x55",
      "enum.elf_machine.EM_D30V=0x56",
      "enum.elf_machine.EM_DSP24=0x88",
      "enum.elf_machine.EM_DSPIC30F=0x76",
      "enum.elf_machine.EM_DXP=0x70",
      "enum.elf_machine.EM_ECOG16=0xb0",
      "enum.elf_machine.EM_ECOG1X=0xa8",
      "enum.elf_machine.EM_ECOG2=0x86",
      "enum.elf_machine.EM_ETPU=0xb2",
      "enum.elf_machine.EM_EXCESS=0x6f",
      "enum.elf_machine.EM_F2MC16=0x68",
      "enum.elf_machine.EM_FIREPATH=0x4e",
      "enum.elf_machine.EM_FR20=0x25",
      "enum.elf_machine.EM_FR30=0x54",
      "enum.elf_machine.EM_FX66=0x42",
      "enum.elf_machine.EM_H8S=0x30",
      "enum.elf_machine.EM_H8_300=0x2e",
      "enum.elf_machine.EM_H8_300H=0x2f",
      "enum.elf_machine.EM_H8_500=0x31",
      "enum.elf_machine.EM_HUANY=0x51",
      "enum.elf_machine.EM_IAMCU=0x6",
      "enum.elf_machine.EM_IA_64=0x32",
      "enum.elf_machine.EM_INTEL205=0xcd",
      "enum.elf_machine.EM_INTEL206=0xce",
      "enum.elf_machine.EM_INTEL207=0xcf",
      "enum.elf_machine.EM_INTEL208=0xd0",
      "enum.elf_machine.EM_INTEL209=0xd1",
      "enum.elf_machine.EM_IP2K=0x65",
      "enum.elf_machine.EM_JAVELIN=0x4d",
      "enum.elf_machine.EM_K10M=0xb5",
      "enum.elf_machine.EM_KM32=0xd2",
      "enum.elf_machine.EM_KMX16=0xd4",
      "enum.elf_machine.EM_KMX32=0xd3",
      "enum.elf_machine.EM_KMX8=0xd5",
      "enum.elf_machine.EM_KVARC=0xd6",
      "enum.elf_machine.EM_KVX=0x100",
      "enum.elf_machine.EM_L10M=0xb4",
      "enum.elf_machine.EM_LANAI=0xf4",
      "enum.elf_machine.EM_LATTICEMICO32=0x8a",
      "enum.elf_machine.EM_LOONGARCH=0x102",
      "enum.elf_machine.EM_M16C=0x75",
      "enum.elf_machine.EM_M32=0x1",
      "enum.elf_machine.EM_M32C=0x78",
      "enum.elf_machine.EM_M32R=0x58",
      "enum.elf_machine.EM_MANIK=0xab",
      "enum.elf_machine.EM_MAX=0x66",
      "enum.elf_machine.EM_MAXQ30=0xa9",
      "enum.elf_machine.EM_MCHP_PIC=0xcc",
      "enum.elf_machine.EM_MCST_ELBRUS=0xaf",
      "enum.elf_machine.EM_ME16=0x3b",
      "enum.elf_machine.EM_METAG=0xae",
      "enum.elf_machine.EM_MIPS=0x8",
      "enum.elf_machine.EM_MIPS_RS3_LE=0xa",
      "enum.elf_machine.EM_MIPS_X=0x33",
      "enum.elf_machine.EM_MMA=0x36",
      "enum.elf_machine.EM_MMDSP_PLUS=0xa0",
      "enum.elf_machine.EM_MMIX=0x50",
      "enum.elf_machine.EM_MN10200=0x5a",
      "enum.elf_machine.EM_MN10300=0x59",
      "enum.elf_machine.EM_MSP430=0x69",
      "enum.elf_machine.EM_NCPU=0x38",
      "enum.elf_machine.EM_NDR1=0x39",
      "enum.elf_machine.EM_NDS32=0xa7",
      "enum.elf_machine.EM_NONE=0x0",
      "enum.elf_machine.EM_NORC=0xda",
      "enum.elf_machine.EM_NS32K=0x61",
      "enum.elf_machine.EM_OPEN8=0xc4",
      "enum.elf_machine.EM_OPENRISC=0x5c",
      "enum.elf_machine.EM_PARISC=0xf",
      "enum.elf_machine.EM_PCP=0x37",
      "enum.elf_machine.EM_PDP10=0x40",
      "enum.elf_machine.EM_PDP11=0x41",
      "enum.elf_machine.EM_PDSP=0x3f",
      "enum.elf_machine.EM_PJ=0x5b",
      "enum.elf_machine.EM_PPC=0x14",
      "enum.elf_machine.EM_PPC64=0x15",
      "enum.elf_machine.EM_PRISM=0x52",
      "enum.elf_machine.EM_QDSP6=0xa4",
      "enum.elf_machine.EM_R32C=0xa2",
      "enum.elf_machine.EM_RCE=0x27",
      "enum.elf_machine.EM_RH32=0x26",
      "enum.elf_machine.EM_RISCV=0xf3",
      "enum.elf_machine.EM_RL78=0xc5",
      "enum.elf_machine.EM_RS08=0x84",
      "enum.elf_machine.EM_RS6000=0xb",
      "enum.elf_machine.EM_RX=0xad",
      "enum.elf_machine.EM_S370=0x9",
      "enum.elf_machine.EM_S390=0x16",
      "enum.elf_machine.EM_SCORE7=0x87",
      "enum.elf_machine.EM_SEP=0x6c",
      "enum.elf_machine.EM_SE_C17=0x8b",
      "enum.elf_machine.EM_SE_C33=0x6b",
      "enum.elf_machine.EM_SH=0x2a",
      "enum.elf_machine.EM_SHARC=0x85",
      "enum.elf_machine.EM_SLE9X=0xb3",
      "enum.elf_machine.EM_SNP1K=0x63",
      "enum.elf_machine.EM_SPARC=0x2",
      "enum.elf_machine.EM_SPARC32PLUS=0x12",
      "enum.elf_machine.EM_SPARCV9=0x2b",
      "enum.elf_machine.EM_SPU=0x17",
      "enum.elf_machine.EM_ST100=0x3c",
      "enum.elf_machine.EM_ST19=0x4a",
      "enum.elf_machine.EM_ST200=0x64",
      "enum.elf_machine.EM_ST7=0x44",
      "enum.elf_machine.EM_ST9PLUS=0x43",
      "enum.elf_machine.EM_STARCORE=0x3a",
      "enum.elf_machine.EM_STM8=0xba",
      "enum.elf_machine.EM_STXP7X=0xa6",
      "enum.elf_machine.EM_SVX=0x49",
      "enum.elf_machine.EM_TILE64=0xbb",
      "enum.elf_machine.EM_TILEGX=0xbf",
      "enum.elf_machine.EM_TILEPRO=0xbc",
      "enum.elf_machine.EM_TINYJ=0x3d",
      "enum.elf_machine.EM_TI_ARP32=0x8f",
      "enum.elf_machine.EM_TI_C2000=0x8d",
      "enum.elf_machine.EM_TI_C5500=0x8e",
      "enum.elf_machine.EM_TI_C6000=0x8c",
      "enum.elf_machine.EM_TI_PRU=0x90",
      "enum.elf_machine.EM_TMM_GPP=0x60",
      "enum.elf_machine.EM_TPC=0x62",
      "enum.elf_machine.EM_TRICORE=0x2c",
      "enum.elf_machine.EM_TRIMEDIA=0xa3",
      "enum.elf_machine.EM_TSK3000=0x83",
      "enum.elf_machine.EM_UNICORE=0x6e",
      "enum.elf_machine.EM_V800=0x24",
      "enum.elf_machine.EM_V850=0x57",
      "enum.elf_machine.EM_VAX=0x4b",
      "enum.elf_machine.EM_VIDEOCORE=0x5f",
      "enum.elf_machine.EM_VIDEOCORE3=0x89",
      "enum.elf_machine.EM_VIDEOCORE5=0xc6",
      "enum.elf_machine.EM_VPP500=0x11",
      "enum.elf_machine.EM_X86_64=0x3e",
      "enum.elf_machine.EM_XCORE=0xcb",
      "enum.elf_machine.EM_XGATE=0x73",
      "enum.elf_machine.EM_XIMO16=0xaa",
      "enum.elf_machine.EM_XTENSA=0x5e",
      "enum.elf_machine.EM_ZSP=0x4f",
      "enum.elf_machine.EM_nCUBE=0x10",
      "enum.elf_obj_version=EV_NONE,EV_CURRENT",
      "enum.elf_obj_version.0x0=EV_NONE",
      "enum.elf_obj_version.0x1=EV_CURRENT",
      "enum.elf_obj_version.EV_CURRENT=0x1",
      "enum.elf_obj_version.EV_NONE=0x0",
      "enum.elf_p_flags=PF_None,PF_Exec,PF_Write,PF_Write_Exec,PF_Read,PF_Read_Exec,PF_Read_Write,PF_Read_Write_Exec",
      "enum.elf_p_flags.0x0=PF_None",
      "enum.elf_p_flags.0x1=PF_Exec",
      "enum.elf_p_flags.0x2=PF_Write",
      "enum.elf_p_flags.0x3=PF_Write_Exec",
      "enum.elf_p_flags.0x4=PF_Read",
      "enum.elf_p_flags.0x5=PF_Read_Exec",
      "enum.elf_p_flags.0x6=PF_Read_Write",
      "enum.elf_p_flags.0x7=PF_Read_Write_Exec",
      "enum.elf_p_flags.PF_Exec=0x1",
      "enum.elf_p_flags.PF_None=0x0",
      "enum.elf_p_flags.PF_Read=0x4",
      "enum.elf_p_flags.PF_Read_Exec=0x5",
      "enum.elf_p_flags.PF_Read_Write=0x6",
      "enum.elf_p_flags.PF_Read_Write_Exec=0x7",
      "enum.elf_p_flags.PF_Write=0x2",
      "enum.elf_p_flags.PF_Write_Exec=0x3",
      "enum.elf_p_type=PT_NULL,PT_LOAD,PT_DYNAMIC,PT_INTERP,PT_NOTE,PT_SHLIB,PT_PHDR,PT_LOOS,PT_HIOS,PT_LOPROC,PT_HIPROC",
      "enum.elf_p_type.0x0=PT_NULL",
      "enum.elf_p_type.0x1=PT_LOAD",
      "enum.elf_p_type.0x2=PT_DYNAMIC",
      "enum.elf_p_type.0x3=PT_INTERP",
      "enum.elf_p_type.0x4=PT_NOTE",
      "enum.elf_p_type.0x5=PT_SHLIB",
      "enum.elf_p_type.0x6=PT_PHDR",
      "enum.elf_p_type.0x60000000=PT_LOOS",
      "enum.elf_p_type.0x6fffffff=PT_HIOS",
      "enum.elf_p_type.0x70000000=PT_LOPROC",
      "enum.elf_p_type.0x7fffffff=PT_HIPROC",
      "enum.elf_p_type.PT_DYNAMIC=0x2",
      "enum.elf_p_type.PT_HIOS=0x6fffffff",
      "enum.elf_p_type.PT_HIPROC=0x7fffffff",
      "enum.elf_p_type.PT_INTERP=0x3",
      "enum.elf_p_type.PT_LOAD=0x1",
      "enum.elf_p_type.PT_LOOS=0x60000000",
      "enum.elf_p_type.PT_LOPROC=0x70000000",
      "enum.elf_p_type.PT_NOTE=0x4",
      "enum.elf_p_type.PT_NULL=0x0",
      "enum.elf_p_type.PT_PHDR=0x6",
      "enum.elf_p_type.PT_SHLIB=0x5",
      "enum.elf_s_flags_32=SF32_None,SF32_Exec,SF32_Alloc,SF32_Alloc_Exec,SF32_Write,SF32_Write_Exec,SF32_Write_Alloc,SF32_Write_Alloc_Exec",
      "enum.elf_s_flags_32.0x0=SF32_None",
      "enum.elf_s_flags_32.0x1=SF32_Exec",
      "enum.elf_s_flags_32.0x2=SF32_Alloc",
      "enum.elf_s_flags_32.0x3=SF32_Alloc_Exec",
      "enum.elf_s_flags_32.0x4=SF32_Write",
      "enum.elf_s_flags_32.0x5=SF32_Write_Exec",
      "enum.elf_s_flags_32.0x6=SF32_Write_Alloc",
      "enum.elf_s_flags_32.0x7=SF32_Write_Alloc_Exec",
      "enum.elf_s_flags_32.SF32_Alloc=0x2",
      "enum.elf_s_flags_32.SF32_Alloc_Exec=0x3",
      "enum.elf_s_flags_32.SF32_Exec=0x1",
      "enum.elf_s_flags_32.SF32_None=0x0",
      "enum.elf_s_flags_32.SF32_Write=0x4",
      "enum.elf_s_flags_32.SF32_Write_Alloc=0x6",
      "enum.elf_s_flags_32.SF32_Write_Alloc_Exec=0x7",
      "enum.elf_s_flags_32.SF32_Write_Exec=0x5",
      "enum.elf_s_type=SHT_NULL,SHT_PROGBITS,SHT_SYMTAB,SHT_STRTAB,SHT_RELA,SHT_HASH,SHT_DYNAMIC,SHT_NOTE,SHT_NOBITS,SHT_REL,SHT_SHLIB,SHT_DYNSYM,SHT_LOOS,SHT_HIOS,SHT_LOPROC,SHT_HIPROC",
      "enum.elf_s_type.0x0=SHT_NULL",
      "enum.elf_s_type.0x1=SHT_PROGBITS",
      "enum.elf_s_type.0x2=SHT_SYMTAB",
      "enum.elf_s_type.0x3=SHT_STRTAB",
      "enum.elf_s_type.0x4=SHT_RELA",
      "enum.elf_s_type.0x5=SHT_HASH",
      "enum.elf_s_type.0x6=SHT_DYNAMIC",
      "enum.elf_s_type.0x60000000=SHT_LOOS",
      "enum.elf_s_type.0x6fffffff=SHT_HIOS",
      "enum.elf_s_type.0x7=SHT_NOTE",
      "enum.elf_s_type.0x70000000=SHT_LOPROC",
      "enum.elf_s_type.0x7fffffff=SHT_HIPROC",
      "enum.elf_s_type.0x8=SHT_NOBITS",
      "enum.elf_s_type.0x9=SHT_REL",
      "enum.elf_s_type.0xa=SHT_SHLIB",
      "enum.elf_s_type.0xb=SHT_DYNSYM",
      "enum.elf_s_type.SHT_DYNAMIC=0x6",
      "enum.elf_s_type.SHT_DYNSYM=0xb",
      "enum.elf_s_type.SHT_HASH=0x5",
      "enum.elf_s_type.SHT_HIOS=0x6fffffff",
      "enum.elf_s_type.SHT_HIPROC=0x7fffffff",
      "enum.elf_s_type.SHT_LOOS=0x60000000",
      "enum.elf_s_type.SHT_LOPROC=0x70000000",
      "enum.elf_s_type.SHT_NOBITS=0x8",
      "enum.elf_s_type.SHT_NOTE=0x7",
      "enum.elf_s_type.SHT_NULL=0x0",
      "enum.elf_s_type.SHT_PROGBITS=0x1",
      "enum.elf_s_type.SHT_REL=0x9",
      "enum.elf_s_type.SHT_RELA=0x4",
      "enum.elf_s_type.SHT_SHLIB=0xa",
      "enum.elf_s_type.SHT_STRTAB=0x3",
      "enum.elf_s_type.SHT_SYMTAB=0x2",
      "enum.elf_type=ET_NONE,ET_REL,ET_EXEC,ET_DYN,ET_CORE,ET_LOOS,ET_HIOS,ET_LOPROC,ET_HIPROC",
      "enum.elf_type.0x0=ET_NONE",
      "enum.elf_type.0x1=ET_REL",
      "enum.elf_type.0x2=ET_EXEC",
      "enum.elf_type.0x3=ET_DYN",
      "enum.elf_type.0x4=ET_CORE",
      "enum.elf_type.0xfe00=ET_LOOS",
      "enum.elf_type.0xfeff=ET_HIOS",
      "enum.elf_type.0xff00=ET_LOPROC",
      "enum.elf_type.0xffff=ET_HIPROC",
      "enum.elf_type.ET_CORE=0x4",
      "enum.elf_type.ET_DYN=0x3",
      "enum.elf_type.ET_EXEC=0x2",
      "enum.elf_type.ET_HIOS=0xfeff",
      "enum.elf_type.ET_HIPROC=0xffff",
      "enum.elf_type.ET_LOOS=0xfe00",
      "enum.elf_type.ET_LOPROC=0xff00",
      "enum.elf_type.ET_NONE=0x0",
      "enum.elf_type.ET_REL=0x1",
      "erf=func",
      "erfc=func",
      "erfcf=func",
      "erfcl=func",
      "erff=func",
      "erfl=func",
      "err=func",
      "errc=func",
      "error=func",
      "errx=func",
      "exit=func",
      "exp=func",
      "exp2=func",
      "exp2f=func",
      "exp2l=func",
      "expf=func",
      "expl=func",
      "expm1=func",
      "expm1f=func",
      "expm1l=func",
      "fabs=func",
      "fabsf=func",
      "fabsl=func",
      "fchmod=func",
      "fclose=func",
      "fdim=func",
      "fdimf=func",
      "fdiml=func",
      "feclearexcept=func",
      "fegetenv=func",
      "fegetexceptflag=func",
      "fegetround=func",
      "feholdexcept=func",
      "feof=func",
      "feraiseexcept=func",
      "ferror=func",
      "fesetenv=func",
      "fesetexceptflag=func",
      "fesetround=func",
      "fetestexcept=func",
      "feupdateenv=func",
      "fflush=func",
      "fgetc=func",
      "fgetpos=func",
      "fgets=func",
      "fgetwc=func",
      "fgetws=func",
      "fileno=func",
      "float=type",
      "floor=func",
      "floorf=func",
      "floorl=func",
      "fma=func",
      "fmaf=func",
      "fmal=func",
      "fmax=func",
      "fmaxf=func",
      "fmaxl=func",
      "fmin=func",
      "fminf=func",
      "fminl=func",
      "fmod=func",
      "fmodf=func",
      "fmodl=func",
      "fopen=func",
      "fpclassify=func",
      "fprintf=func",
      "fputc=func",
      "fputs=func",
      "fputwc=func",
      "fputws=func",
      "fread=func",
      "free=func",
      "freopen=func",
      "frexp=func",
      "frexpf=func",
      "frexpl=func",
      "fscanf=func",
      "fseek=func",
      "fsetpos=func",
      "fstat=func",
      "ftell=func",
      "fts_children_INODE64=func",
      "fts_close_INODE64=func",
      "fts_open_INODE64=func",
      "fts_read_INODE64=func",
      "fts_set_INODE64=func",
      "func.*aligned_alloc.arg.0=size_t,alignment",
      "func.*aligned_alloc.arg.1=size_t,size",
      "func.*aligned_alloc.args=2",
      "func.*aligned_alloc.ret=void",
      "func._Exit.arg.0=int,status",
      "func._Exit.args=1",
      "func._Exit.noreturn=true",
      "func._Exit.ret=void",
      "func.__assert_fail.arg.0=const char *,assertion",
      "func.__assert_fail.arg.1=const char *,file",
      "func.__assert_fail.arg.2=unsigned int,line",
      "func.__assert_fail.arg.3=const char *,function",
      "func.__assert_fail.args=4",
      "func.__assert_fail.noreturn=true",
      "func.__assert_fail.ret=void",
      "func.__bzero.arg.0=void *,s",
      "func.__bzero.arg.1=size_t,n",
      "func.__bzero.args=2",
      "func.__bzero.ret=void",
      "func.__cxa_throw.arg.0=void *,thrown_exception",
      "func.__cxa_throw.arg.1=struct std::type_info *,tinfo",
      "func.__cxa_throw.arg.2=void *,dest",
      "func.__cxa_throw.args=3",
      "func.__cxa_throw.noreturn=true",
      "func.__cxa_throw.ret=void",
      "func.__error.arg.0=int,status",
      "func.__error.arg.1=int,errname",
      "func.__error.arg.2=char *,format",
      "func.__error.args=3",
      "func.__error.ret=void",
      "func.__libc_init.arg.0=int,argc",
      "func.__libc_init.arg.1=char **,argv",
      "func.__libc_init.arg.2=char **,envp",
      "func.__libc_init.args=3",
      "func.__libc_init.noreturn=true",
      "func.__libc_init.ret=void",
      "func.__libc_init_array.args=0",
      "func.__libc_init_array.ret=void",
      "func.__libc_start_main.arg.0=func,main",
      "func.__libc_start_main.arg.1=int,argc",
      "func.__libc_start_main.arg.2=char **,ubp_av",
      "func.__libc_start_main.arg.3=func,init",
      "func.__libc_start_main.arg.4=func,fini",
      "func.__libc_start_main.arg.5=func,rtld_fini",
      "func.__libc_start_main.arg.6=void *,stack_end",
      "func.__libc_start_main.args=7",
      "func.__libc_start_main.noreturn=true",
      "func.__libc_start_main.ret=int",
      "func.__maskrune.arg.0=long,c",
      "func.__maskrune.arg.1=long,f",
      "func.__maskrune.args=2",
      "func.__maskrune.ret=int",
      "func.__stack_chk_fail.args=0",
      "func.__stack_chk_fail.noreturn=true",
      "func.__stack_chk_fail.ret=void",
      "func.__tolower.arg.0=int,c",
      "func.__tolower.args=1",
      "func.__tolower.ret=int",
      "func.__toupper.arg.0=int,c",
      "func.__toupper.args=1",
      "func.__toupper.ret=int",
      "func.__uClibc_main.arg.0=func,main",
      "func.__uClibc_main.arg.1=int,argc",
      "func.__uClibc_main.arg.2=char **,argv",
      "func.__uClibc_main.arg.3=func,app_init",
      "func.__uClibc_main.arg.4=func,app_fini",
      "func.__uClibc_main.arg.5=func,rtld_fini",
      "func.__uClibc_main.arg.6=void *,stack_end",
      "func.__uClibc_main.args=7",
      "func.__uClibc_main.noreturn=true",
      "func.__uClibc_main.ret=int",
      "func._exit.arg.0=int,status",
      "func._exit.args=1",
      "func._exit.noreturn=true",
      "func._exit.ret=void",
      "func._sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF.arg.0=void *",
      "func._sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF.args=1",
      "func._sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF.ret=void *",
      "func.abort.args=0",
      "func.abort.noreturn=true",
      "func.abort.ret=void",
      "func.abs.arg.0=int,j",
      "func.abs.args=1",
      "func.abs.ret=int",
      "func.access.arg.0=const char *,path",
      "func.access.arg.1=int,mode",
      "func.access.args=2",
      "func.access.ret=int",
      "func.acos.arg.0=arithmetic,x",
      "func.acos.args=1",
      "func.acos.ret=floating_point",
      "func.acosf.arg.0=float,x",
      "func.acosf.args=1",
      "func.acosf.ret=float",
      "func.acosh.arg.0=arithmetic,x",
      "func.acosh.args=1",
      "func.acosh.ret=floating_point",
      "func.acoshf.arg.0=float,x",
      "func.acoshf.args=1",
      "func.acoshf.ret=float",
      "func.acoshl.arg.0=long double,x",
      "func.acoshl.args=1",
      "func.acoshl.ret=long double",
      "func.acosl.arg.0=long double,x",
      "func.acosl.args=1",
      "func.acosl.ret=long double",
      "func.arc4random.args=0",
      "func.arc4random.ret=uint32_t",
      "func.asctime.arg.0=const tm *,timeptr",
      "func.asctime.args=1",
      "func.asctime.ret=char *",
      "func.asin.arg.0=arithmetic,x",
      "func.asin.args=1",
      "func.asin.ret=floating_point",
      "func.asinf.arg.0=float,x",
      "func.asinf.args=1",
      "func.asinf.ret=float",
      "func.asinh.arg.0=arithmetic,x",
      "func.asinh.args=1",
      "func.asinh.ret=floating_point",
      "func.asinhf.arg.0=float,x",
      "func.asinhf.args=1",
      "func.asinhf.ret=float",
      "func.asinhl.arg.0=long double,x",
      "func.asinhl.args=1",
      "func.asinhl.ret=long double",
      "func.asinl.arg.0=long double,x",
      "func.asinl.args=1",
      "func.asinl.ret=long double",
      "func.at_quick_exit.args=0",
      "func.at_quick_exit.ret=int",
      "func.atan.arg.0=arithmetic,x",
      "func.atan.args=1",
      "func.atan.ret=floating_point",
      "func.atan2.arg.0=arithmetic,y",
      "func.atan2.arg.1=arithmetic,x",
      "func.atan2.args=2",
      "func.atan2.ret=floating_point",
      "func.atan2f.arg.0=float,y",
      "func.atan2f.arg.1=float,x",
      "func.atan2f.args=2",
      "func.atan2f.ret=float",
      "func.atan2l.arg.0=long double,y",
      "func.atan2l.arg.1=long double,x",
      "func.atan2l.args=2",
      "func.atan2l.ret=long double",
      "func.atanf.arg.0=float,x",
      "func.atanf.args=1",
      "func.atanf.ret=float",
      "func.atanh.arg.0=arithmetic,x",
      "func.atanh.args=1",
      "func.atanh.ret=floating_point",
      "func.atanhf.arg.0=float,x",
      "func.atanhf.args=1",
      "func.atanhf.ret=float",
      "func.atanhl.arg.0=long double,x",
      "func.atanhl.args=1",
      "func.atanhl.ret=long double",
      "func.atanl.arg.0=long double,x",
      "func.atanl.args=1",
      "func.atanl.ret=long double",
      "func.atexit.arg.0=func,function",
      "func.atexit.args=1",
      "func.atexit.ret=int",
      "func.atof.arg.0=const char *,str",
      "func.atof.args=1",
      "func.atof.ret=double",
      "func.atoi.arg.0=const char *,str",
      "func.atoi.args=1",
      "func.atoi.ret=int",
      "func.atol.arg.0=const char *,str",
      "func.atol.args=1",
      "func.atol.ret=long",
      "func.atoll.arg.0=const char *,str",
      "func.atoll.args=1",
      "func.atoll.ret=long long",
      "func.basename.arg.0=char *,path",
      "func.basename.args=1",
      "func.basename.ret=char *",
      "func.bind.arg.0=int,socket",
      "func.bind.arg.1=struct sockaddr*,address",
      "func.bind.arg.2=socklen_t,address_len",
      "func.bind.args=3",
      "func.bind.ret=int",
      "func.bindtextdomain.arg.0=char *,domainname",
      "func.bindtextdomain.arg.1=char *,dirname",
      "func.bindtextdomain.args=2",
      "func.bindtextdomain.ret=char *",
      "func.bsearch.arg.0=const void *,key",
      "func.bsearch.arg.1=const void *,base",
      "func.bsearch.arg.2=size_t,nmemb",
      "func.bsearch.arg.3=size_t,size",
      "func.bsearch.arg.4=int,(*compar)(const void *,const void *)",
      "func.bsearch.args=5",
      "func.btowc.arg.0=int,c",
      "func.btowc.args=1",
      "func.btowc.ret=wint_t",
      "func.bzero.arg.0=void *,s",
      "func.bzero.arg.1=size_t,n",
      "func.bzero.args=2",
      "func.bzero.ret=void",
      "func.calloc.arg.0=size_t,nmeb",
      "func.calloc.arg.1=size_t,size",
      "func.calloc.args=2",
      "func.calloc.ret=void *",
      "func.cbrt.arg.0=arithmetic,x",
      "func.cbrt.args=1",
      "func.cbrt.ret=floating_point",
      "func.cbrtf.arg.0=float,x",
      "func.cbrtf.args=1",
      "func.cbrtf.ret=float",
      "func.cbrtl.arg.0=long double,x",
      "func.cbrtl.args=1",
      "func.cbrtl.ret=long double",
      "func.ceil.arg.0=arithmetic,x",
      "func.ceil.args=1",
      "func.ceil.ret=floating_point",
      "func.ceilf.arg.0=float,x",
      "func.ceilf.args=1",
      "func.ceilf.ret=float",
      "func.ceill.arg.0=long double,x",
      "func.ceill.args=1",
      "func.ceill.ret=long double",
      "func.chmod.arg.0=const char *,path",
      "func.chmod.arg.1=int,mode",
      "func.chmod.args=2",
      "func.chmod.ret=int",
      "func.clearerr.arg.0=FILE *,stream",
      "func.clearerr.args=1",
      "func.clearerr.ret=void",
      "func.clock.args=0",
      "func.clock.ret=clock_t",
      "func.close.arg.0=int,fildes",
      "func.close.args=1",
      "func.close.ret=int",
      "func.compat_mode.arg.0=const char *,function",
      "func.compat_mode.arg.1=const char *,mode",
      "func.compat_mode.args=2",
      "func.compat_mode.ret=bool",
      "func.connect.arg.0=int,socket",
      "func.connect.arg.1=void *,addr",
      "func.connect.arg.2=size_t,addrlen",
      "func.connect.args=3",
      "func.connect.ret=ssize_t",
      "func.copysign.arg.0=arithmetic,x",
      "func.copysign.arg.1=arithmetic,y",
      "func.copysign.args=2",
      "func.copysign.ret=floating_point",
      "func.copysignf.arg.0=float,x",
      "func.copysignf.arg.1=float,y",
      "func.copysignf.args=2",
      "func.copysignf.ret=float",
      "func.copysignl.arg.0=long double,x",
      "func.copysignl.arg.1=long double,y",
      "func.copysignl.args=2",
      "func.copysignl.ret=long double",
      "func.cos.arg.0=arithmetic,x",
      "func.cos.args=1",
      "func.cos.ret=floating_point",
      "func.cosf.arg.0=float,x",
      "func.cosf.args=1",
      "func.cosf.ret=float",
      "func.cosh.arg.0=arithmetic,x",
      "func.cosh.args=1",
      "func.cosh.ret=floating_point",
      "func.coshf.arg.0=float,x",
      "func.coshf.args=1",
      "func.coshf.ret=float",
      "func.coshl.arg.0=long double,x",
      "func.coshl.args=1",
      "func.coshl.ret=long double",
      "func.cosl.arg.0=long double,x",
      "func.cosl.args=1",
      "func.cosl.ret=long double",
      "func.ctime.arg.0=const time_t *,timer",
      "func.ctime.args=1",
      "func.ctime.ret=char *",
      "func.difftime.arg.0=time_t,time1",
      "func.difftime.arg.1=time_t,time0",
      "func.difftime.args=2",
      "func.difftime.ret=double",
      "func.div.arg.0=int,numer",
      "func.div.arg.1=int,denom",
      "func.div.args=2",
      "func.div.ret=div_t",
      "func.erf.arg.0=arithmetic,x",
      "func.erf.args=1",
      "func.erf.ret=floating_point",
      "func.erfc.arg.0=arithmetic,x",
      "func.erfc.args=1",
      "func.erfc.ret=floating_point",
      "func.erfcf.arg.0=float,x",
      "func.erfcf.args=1",
      "func.erfcf.ret=float",
      "func.erfcl.arg.0=long double,x",
      "func.erfcl.args=1",
      "func.erfcl.ret=long double",
      "func.erff.arg.0=float,x",
      "func.erff.args=1",
      "func.erff.ret=float",
      "func.erfl.arg.0=long double,x",
      "func.erfl.args=1",
      "func.erfl.ret=long double",
      "func.err.arg.0=int,eval",
      "func.err.arg.1=const char *,fmt",
      "func.err.args=1",
      "func.err.noreturn=true",
      "func.err.ret=void",
      "func.errc.arg.0=int,eval",
      "func.errc.arg.1=int,code",
      "func.errc.arg.2=const char *,fmt",
      "func.errc.args=1",
      "func.errc.noreturn=true",
      "func.errc.ret=void",
      "func.error.arg.0=int,status",
      "func.error.arg.1=int,errname",
      "func.error.arg.2=char *,format",
      "func.error.args=3",
      "func.error.ret=void",
      "func.errx.arg.0=int,eval",
      "func.errx.arg.1=const char *,fmt",
      "func.errx.args=1",
      "func.errx.noreturn=true",
      "func.errx.ret=void",
      "func.exit.arg.0=int,status",
      "func.exit.args=1",
      "func.exit.noreturn=true",
      "func.exit.ret=void",
      "func.exp.arg.0=arithmetic,x",
      "func.exp.args=1",
      "func.exp.ret=floating_point",
      "func.exp2.arg.0=arithmetic,x",
      "func.exp2.args=1",
      "func.exp2.ret=floating_point",
      "func.exp2f.arg.0=float,x",
      "func.exp2f.args=1",
      "func.exp2f.ret=float",
      "func.exp2l.arg.0=long double,x",
      "func.exp2l.args=1",
      "func.exp2l.ret=long double",
      "func.expf.arg.0=float,x",
      "func.expf.args=1",
      "func.expf.ret=float",
      "func.expl.arg.0=long double,x",
      "func.expl.args=1",
      "func.expl.ret=long double",
      "func.expm1.arg.0=arithmetic,x",
      "func.expm1.args=1",
      "func.expm1.ret=floating_point",
      "func.expm1f.arg.0=float,x",
      "func.expm1f.args=1",
      "func.expm1f.ret=float",
      "func.expm1l.arg.0=long double,x",
      "func.expm1l.args=1",
      "func.expm1l.ret=long double",
      "func.fabs.arg.0=arithmetic,x",
      "func.fabs.args=1",
      "func.fabs.ret=floating_point",
      "func.fabsf.arg.0=float,x",
      "func.fabsf.args=1",
      "func.fabsf.ret=float",
      "func.fabsl.arg.0=long double,x",
      "func.fabsl.args=1",
      "func.fabsl.ret=long double",
      "func.fchmod.arg.0=int,fd",
      "func.fchmod.arg.1=int,mode",
      "func.fchmod.args=2",
      "func.fchmod.ret=int",
      "func.fclose.arg.0=FILE *,stream",
      "func.fclose.args=1",
      "func.fclose.ret=int",
      "func.fdim.arg.0=arithmetic,x",
      "func.fdim.arg.1=arithmetic,y",
      "func.fdim.args=2",
      "func.fdim.ret=floating_point",
      "func.fdimf.arg.0=float,x",
      "func.fdimf.arg.1=float,y",
      "func.fdimf.args=2",
      "func.fdimf.ret=float",
      "func.fdiml.arg.0=long double,x",
      "func.fdiml.arg.1=long double,y",
      "func.fdiml.args=2",
      "func.fdiml.ret=long double",
      "func.feclearexcept.arg.0=int,excepts",
      "func.feclearexcept.args=1",
      "func.feclearexcept.ret=int",
      "func.fegetenv.arg.0=fenv_t *,envp",
      "func.fegetenv.args=1",
      "func.fegetenv.ret=int",
      "func.fegetexceptflag.arg.0=fexcept_t *,flagp",
      "func.fegetexceptflag.arg.1=int,excepts",
      "func.fegetexceptflag.args=2",
      "func.fegetexceptflag.ret=int",
      "func.fegetround.args=0",
      "func.fegetround.ret=int",
      "func.feholdexcept.arg.0=fenv_t *,envp",
      "func.feholdexcept.args=1",
      "func.feholdexcept.ret=int",
      "func.feof.arg.0=FILE *,stream",
      "func.feof.args=1",
      "func.feof.ret=int",
      "func.feraiseexcept.arg.0=int,excepts",
      "func.feraiseexcept.args=1",
      "func.feraiseexcept.ret=int",
      "func.ferror.arg.0=FILE *,stream",
      "func.ferror.args=1",
      "func.ferror.ret=int",
      "func.fesetenv.arg.0=const,fenv_t*",
      "func.fesetenv.args=1",
      "func.fesetenv.ret=int",
      "func.fesetexceptflag.arg.0=const,fexcept_t*",
      "func.fesetexceptflag.arg.1=int,excepts",
      "func.fesetexceptflag.args=2",
      "func.fesetexceptflag.ret=int",
      "func.fesetround.arg.0=int,round",
      "func.fesetround.args=1",
      "func.fesetround.ret=int",
      "func.fetestexcept.arg.0=int,excepts",
      "func.fetestexcept.args=1",
      "func.fetestexcept.ret=int",
      "func.feupdateenv.arg.0=const,fenv_t*",
      "func.feupdateenv.args=1",
      "func.feupdateenv.ret=int",
      "func.fflush.arg.0=FILE *,stream",
      "func.fflush.args=1",
      "func.fflush.ret=int",
      "func.fgetc.arg.0=FILE *,stream",
      "func.fgetc.args=1",
      "func.fgetc.ret=int",
      "func.fgetpos.arg.0=FILE *,stream",
      "func.fgetpos.arg.1=fpos_t*,pos",
      "func.fgetpos.args=2",
      "func.fgetpos.ret=int",
      "func.fgets.arg.0=char *,s",
      "func.fgets.arg.1=int,size",
      "func.fgets.arg.2=FILE *,stream",
      "func.fgets.args=3",
      "func.fgets.ret=char *",
      "func.fgetwc.arg.0=FILE *,stream",
      "func.fgetwc.args=1",
      "func.fgetwc.ret=wint_t",
      "func.fgetws.arg.0=wchar_t *,s",
      "func.fgetws.arg.1=int,n",
      "func.fgetws.arg.2=FILE *,stream",
      "func.fgetws.args=3",
      "func.fgetws.ret=wchar_t*",
      "func.fileno.arg.0=FILE *,stream",
      "func.fileno.args=1",
      "func.fileno.ret=int",
      "func.floor.arg.0=arithmetic,x",
      "func.floor.args=1",
      "func.floor.ret=floating_point",
      "func.floorf.arg.0=float,x",
      "func.floorf.args=1",
      "func.floorf.ret=float",
      "func.floorl.arg.0=long double,x",
      "func.floorl.args=1",
      "func.floorl.ret=long double",
      "func.fma.arg.0=arithmetic,x",
      "func.fma.arg.1=arithmetic,y",
      "func.fma.arg.2=arithmetic,z",
      "func.fma.args=3",
      "func.fma.ret=floating_point",
      "func.fmaf.arg.0=float,x",
      "func.fmaf.arg.1=float,y",
      "func.fmaf.arg.2=float,z",
      "func.fmaf.args=3",
      "func.fmaf.ret=float",
      "func.fmal.arg.0=long double,x",
      "func.fmal.arg.1=long double,y",
      "func.fmal.arg.2=long double,z",
      "func.fmal.args=3",
      "func.fmal.ret=long double",
      "func.fmax.arg.0=arithmetic,x",
      "func.fmax.arg.1=arithmetic,y",
      "func.fmax.args=2",
      "func.fmax.ret=floating_point",
      "func.fmaxf.arg.0=float,x",
      "func.fmaxf.arg.1=float,y",
      "func.fmaxf.args=2",
      "func.fmaxf.ret=float",
      "func.fmaxl.arg.0=long double,x",
      "func.fmaxl.arg.1=long double,y",
      "func.fmaxl.args=2",
      "func.fmaxl.ret=long double",
      "func.fmin.arg.0=arithmetic,x",
      "func.fmin.arg.1=arithmetic,y",
      "func.fmin.args=2",
      "func.fmin.ret=floating_point",
      "func.fminf.arg.0=float,x",
      "func.fminf.arg.1=float,y",
      "func.fminf.args=2",
      "func.fminf.ret=float",
      "func.fminl.arg.0=long double,x",
      "func.fminl.arg.1=long double,y",
      "func.fminl.args=2",
      "func.fminl.ret=long double",
      "func.fmod.arg.0=arithmetic,x",
      "func.fmod.arg.1=arithmetic,y",
      "func.fmod.args=2",
      "func.fmod.ret=floating_point",
      "func.fmodf.arg.0=float,x",
      "func.fmodf.arg.1=float,y",
      "func.fmodf.args=2",
      "func.fmodf.ret=float",
      "func.fmodl.arg.0=long double,x",
      "func.fmodl.arg.1=long double,y",
      "func.fmodl.args=2",
      "func.fmodl.ret=long double",
      "func.fopen.arg.0=const char *,filename",
      "func.fopen.arg.1=const char *,mode",
      "func.fopen.args=2",
      "func.fopen.ret=file*",
      "func.fpclassify.arg.0=arithmetic,x",
      "func.fpclassify.args=1",
      "func.fpclassify.ret=int",
      "func.fprintf.arg.0=FILE *,stream",
      "func.fprintf.arg.1=const char *,format",
      "func.fprintf.arg.2= ,...",
      "func.fprintf.args=3",
      "func.fprintf.ret=int",
      "func.fputc.arg.0=int,c",
      "func.fputc.arg.1=FILE *,stream",
      "func.fputc.args=2",
      "func.fputc.ret=int",
      "func.fputs.arg.0=const char *,s",
      "func.fputs.arg.1=FILE *,stream",
      "func.fputs.args=2",
      "func.fputs.ret=int",
      "func.fputwc.arg.0=wchar_t,c",
      "func.fputwc.arg.1=FILE *,stream",
      "func.fputwc.args=2",
      "func.fputwc.ret=wint_t",
      "func.fputws.arg.0=const wchar_t *,s",
      "func.fputws.arg.1=FILE *,stream",
      "func.fputws.args=2",
      "func.fputws.ret=int",
      "func.fread.arg.0=void *,ptr",
      "func.fread.arg.1=size_t,size",
      "func.fread.arg.2=size_t,nmemb",
      "func.fread.arg.3=FILE *,stream",
      "func.fread.args=4",
      "func.fread.ret=size_t",
      "func.free.arg.0=void *,ptr",
      "func.free.args=1",
      "func.free.ret=void",
      "func.freopen.arg.0=const char *,filename",
      "func.freopen.arg.1=const char *,mode",
      "func.freopen.arg.2=FILE *,stream",
      "func.freopen.args=3",
      "func.freopen.ret=file*",
      "func.frexp.arg.0=arithmetic,value",
      "func.frexp.arg.1=int *,exp",
      "func.frexp.args=2",
      "func.frexp.ret=floating_point",
      "func.frexpf.arg.0=float,value",
      "func.frexpf.arg.1=int *,exp",
      "func.frexpf.args=2",
      "func.frexpf.ret=float",
      "func.frexpl.arg.0=long double,value",
      "func.frexpl.arg.1=int *,exp",
      "func.frexpl.args=2",
      "func.frexpl.ret=long double",
      "func.fscanf.arg.0=FILE *,stream",
      "func.fscanf.arg.1=const char *,format",
      "func.fscanf.arg.2=,...",
      "func.fscanf.args=3",
      "func.fscanf.ret=int",
      "func.fseek.arg.0=FILE *,stream",
      "func.fseek.arg.1=long,offset",
      "func.fseek.arg.2=int,whence",
      "func.fseek.args=3",
      "func.fseek.ret=int",
      "func.fsetpos.arg.0=FILE *,stream",
      "func.fsetpos.arg.1=const fpos_t*,pos",
      "func.fsetpos.args=2",
      "func.fsetpos.ret=int",
      "func.fstat.arg.0=int,fildes",
      "func.fstat.arg.1=void *,buf",
      "func.fstat.args=2",
      "func.fstat.ret=int",
      "func.ftell.arg.0=FILE *,stream",
      "func.ftell.args=1",
      "func.ftell.ret=long",
      "func.fts_children_INODE64.arg.0=void*,ftsp",
      "func.fts_children_INODE64.arg.1=int,opotions",
      "func.fts_children_INODE64.args=2",
      "func.fts_children_INODE64.ret=void *",
      "func.fts_close_INODE64.arg.0=void*,ftsp",
      "func.fts_close_INODE64.args=1",
      "func.fts_close_INODE64.ret=int",
      "func.fts_open_INODE64.arg.0=const char *,path_argv",
      "func.fts_open_INODE64.arg.1=int,options",
      "func.fts_open_INODE64.arg.2=void *,compar",
      "func.fts_open_INODE64.arg.3=void *,ftsen$INODE64t",
      "func.fts_open_INODE64.args=4",
      "func.fts_open_INODE64.ret=void *",
      "func.fts_read_INODE64.arg.0=void*,ftsp",
      "func.fts_read_INODE64.args=1",
      "func.fts_read_INODE64.ret=void *",
      "func.fts_set_INODE64.arg.0=void*,ftsp",
      "func.fts_set_INODE64.arg.1=void*,f",
      "func.fts_set_INODE64.arg.2=int,options",
      "func.fts_set_INODE64.args=3",
      "func.fts_set_INODE64.ret=int",
      "func.fwide.arg.0=FILE *,stream",
      "func.fwide.arg.1=int,mode",
      "func.fwide.args=2",
      "func.fwide.ret=int",
      "func.fwprintf.arg.0=FILE *,stream",
      "func.fwprintf.arg.1=const wchar_t *,format",
      "func.fwprintf.args=2",
      "func.fwprintf.ret=int",
      "func.fwrite.arg.0=const void *,ptr",
      "func.fwrite.arg.1=size_t,size",
      "func.fwrite.arg.2=size_t,nitems",
      "func.fwrite.arg.3=FILE *,stream",
      "func.fwrite.args=4",
      "func.fwrite.ret=size_t",
      "func.fwscanf.arg.0=FILE *,stream",
      "func.fwscanf.arg.1=const wchar_t *,format",
      "func.fwscanf.args=2",
      "func.fwscanf.ret=int",
      "func.getc.arg.0=FILE *,stream",
      "func.getc.args=1",
      "func.getc.ret=int",
      "func.getchar.args=0",
      "func.getchar.ret=int",
      "func.getenv.arg.0=const char *,name",
      "func.getenv.args=1",
      "func.getenv.ret=char *",
      "func.geteuid.args=0",
      "func.geteuid.ret=uid_t",
      "func.getopt.arg.0=int,argc",
      "func.getopt.arg.1=const char * *,argv",
      "func.getopt.arg.2=const char *,optstring",
      "func.getopt.args=3",
      "func.getopt.ret=int",
      "func.getpid.args=0",
      "func.getpid.ret=int",
      "func.getprogname.args=0",
      "func.getprogname.ret=const char *",
      "func.gets.arg.0=char *,s",
      "func.gets.args=1",
      "func.gets.ret=char *",
      "func.getsockname.arg.0=int,sockfd",
      "func.getsockname.arg.1=struct sockaddr *,addr",
      "func.getsockname.arg.2=socklen_t *,addrlen",
      "func.getsockname.args=3",
      "func.getsockname.ret=int",
      "func.getsockopt.arg.0=int,sockfd",
      "func.getsockopt.arg.1=int,level",
      "func.getsockopt.arg.2=int,optname",
      "func.getsockopt.arg.3=void *,optval",
      "func.getsockopt.arg.4=socklen_t *,optlen",
      "func.getsockopt.args=5",
      "func.getsockopt.ret=int",
      "func.getuid.args=0",
      "func.getuid.ret=uid_t",
      "func.getwc.arg.0=FILE *,stream",
      "func.getwc.args=1",
      "func.getwc.ret=wint_t",
      "func.getwchar.args=0",
      "func.getwchar.ret=wint_t",
      "func.gmtime.arg.0=const time_t *,timer",
      "func.gmtime.args=1",
      "func.gmtime.ret=tm*",
      "func.group_from_gid.arg.0=gid_t,gid",
      "func.group_from_gid.arg.1=int,nogroup",
      "func.group_from_gid.args=2",
      "func.group_from_gid.ret=char *",
      "func.group_from_uid.include=grp.h",
      "func.humanize_number.arg.0=char *,buf",
      "func.humanize_number.arg.1=size_t,len",
      "func.humanize_number.arg.2=int64_t,number",
      "func.humanize_number.arg.3=const char *,suffix",
      "func.humanize_number.arg.4=int,scale",
      "func.humanize_number.arg.5=int,flags",
      "func.humanize_number.args=1",
      "func.humanize_number.ret=int",
      "func.hypot.arg.0=arithmetic,x",
      "func.hypot.arg.1=arithmetic,y",
      "func.hypot.args=2",
      "func.hypot.ret=floating_point",
      "func.hypotf.arg.0=float,x",
      "func.hypotf.arg.1=float,y",
      "func.hypotf.args=2",
      "func.hypotf.ret=float",
      "func.hypotl.arg.0=long double,x",
      "func.hypotl.arg.1=long double,y",
      "func.hypotl.args=2",
      "func.hypotl.ret=long double",
      "func.ilogb.arg.0=arithmetic,x",
      "func.ilogb.args=1",
      "func.ilogb.ret=int",
      "func.ilogbf.arg.0=float,x",
      "func.ilogbf.args=1",
      "func.ilogbf.ret=int",
      "func.ilogbl.arg.0=long double,x",
      "func.ilogbl.args=1",
      "func.ilogbl.ret=int",
      "func.imaxabs.arg.0=intmax_t,j",
      "func.imaxabs.args=1",
      "func.imaxabs.ret=intmax_t",
      "func.imaxdiv.arg.0=intmax_t,numer",
      "func.imaxdiv.arg.1=intmax_t,denom",
      "func.imaxdiv.args=2",
      "func.imaxdiv.ret=imaxdiv_t",
      "func.inet_aton.arg.0=const char *,cp",
      "func.inet_aton.arg.1=void *,pin",
      "func.inet_aton.args=2",
      "func.inet_aton.ret=int",
      "func.inet_ntoa.arg.0=void *,in",
      "func.inet_ntoa.args=1",
      "func.inet_ntoa.ret=char *",
      "func.initstate.arg.0=uint32_t,seed",
      "func.initstate.arg.1=char *,state",
      "func.initstate.arg.2=size_t,size",
      "func.initstate.args=3",
      "func.initstate.ret=char *",
      "func.ioctl.arg.0=int,fd",
      "func.ioctl.arg.1=unsigned long,request",
      "func.ioctl.args=2",
      "func.ioctl.ret=int",
      "func.isalnum.arg.0=int,c",
      "func.isalnum.args=1",
      "func.isalnum.ret=int",
      "func.isalpha.arg.0=int,c",
      "func.isalpha.args=1",
      "func.isalpha.ret=int",
      "func.isatty.arg.0=int,fd",
      "func.isatty.args=1",
      "func.isatty.ret=int",
      "func.isblank.arg.0=int,c",
      "func.isblank.args=1",
      "func.isblank.ret=int",
      "func.iscntrl.arg.0=int,c",
      "func.iscntrl.args=1",
      "func.iscntrl.ret=int",
      "func.isdigit.arg.0=int,c",
      "func.isdigit.args=1",
      "func.isdigit.ret=int",
      "func.isfinite.arg.0=arithmetic,x",
      "func.isfinite.args=1",
      "func.isfinite.ret=bool",
      "func.isgraph.arg.0=int,c",
      "func.isgraph.args=1",
      "func.isgraph.ret=int",
      "func.isgreater.arg.0=arithmetic,x",
      "func.isgreater.arg.1=arithmetic,y",
      "func.isgreater.args=2",
      "func.isgreater.ret=bool",
      "func.isgreaterequal.arg.0=arithmetic,x",
      "func.isgreaterequal.arg.1=arithmetic,y",
      "func.isgreaterequal.args=2",
      "func.isgreaterequal.ret=bool",
      "func.isinf.arg.0=arithmetic,x",
      "func.isinf.args=1",
      "func.isinf.ret=bool",
      "func.isless.arg.0=arithmetic,x",
      "func.isless.arg.1=arithmetic,y",
      "func.isless.args=2",
      "func.isless.ret=bool",
      "func.islessequal.arg.0=arithmetic,x",
      "func.islessequal.arg.1=arithmetic,y",
      "func.islessequal.args=2",
      "func.islessequal.ret=bool",
      "func.islessgreater.arg.0=arithmetic,x",
      "func.islessgreater.arg.1=arithmetic,y",
      "func.islessgreater.args=2",
      "func.islessgreater.ret=bool",
      "func.islower.arg.0=int,c",
      "func.islower.args=1",
      "func.islower.ret=int",
      "func.isnan.arg.0=arithmetic,x",
      "func.isnan.args=1",
      "func.isnan.ret=bool",
      "func.isnormal.arg.0=arithmetic,x",
      "func.isnormal.args=1",
      "func.isnormal.ret=bool",
      "func.isprint.arg.0=int,c",
      "func.isprint.args=1",
      "func.isprint.ret=int",
      "func.ispunct.arg.0=int,c",
      "func.ispunct.args=1",
      "func.ispunct.ret=int",
      "func.isspace.arg.0=int,c",
      "func.isspace.args=1",
      "func.isspace.ret=int",
      "func.isunordered.arg.0=arithmetic,x",
      "func.isunordered.arg.1=arithmetic,y",
      "func.isunordered.args=2",
      "func.isunordered.ret=bool",
      "func.isupper.arg.0=int,c",
      "func.isupper.args=1",
      "func.isupper.ret=int",
      "func.iswalnum.arg.0=wint_t,wc",
      "func.iswalnum.args=1",
      "func.iswalnum.ret=int",
      "func.iswalpha.arg.0=wint_t,wc",
      "func.iswalpha.args=1",
      "func.iswalpha.ret=int",
      "func.iswblank.arg.0=wint_t,wc",
      "func.iswblank.args=1",
      "func.iswblank.ret=int",
      "func.iswcntrl.arg.0=wint_t,wc",
      "func.iswcntrl.args=1",
      "func.iswcntrl.ret=int",
      "func.iswctype.arg.0=wint_t,wc",
      "func.iswctype.arg.1=wctype_t,desc",
      "func.iswctype.args=2",
      "func.iswctype.ret=int",
      "func.iswdigit.arg.0=wint_t,wc",
      "func.iswdigit.args=1",
      "func.iswdigit.ret=int",
      "func.iswgraph.arg.0=wint_t,wc",
      "func.iswgraph.args=1",
      "func.iswgraph.ret=int",
      "func.iswlower.arg.0=wint_t,wc",
      "func.iswlower.args=1",
      "func.iswlower.ret=int",
      "func.iswprint.arg.0=wint_t,wc",
      "func.iswprint.args=1",
      "func.iswprint.ret=int",
      "func.iswpunct.arg.0=wint_t,wc",
      "func.iswpunct.args=1",
      "func.iswpunct.ret=int",
      "func.iswspace.arg.0=wint_t,wc",
      "func.iswspace.args=1",
      "func.iswspace.ret=int",
      "func.iswupper.arg.0=wint_t,wc",
      "func.iswupper.args=1",
      "func.iswupper.ret=int",
      "func.iswxdigit.arg.0=wint_t,wc",
      "func.iswxdigit.args=1",
      "func.iswxdigit.ret=int",
      "func.isxdigit.arg.0=int,c",
      "func.isxdigit.args=1",
      "func.isxdigit.ret=int",
      "func.kill.arg.0=pid_t,pid",
      "func.kill.arg.1=int,sig",
      "func.kill.args=2",
      "func.kill.ret=int",
      "func.labs.arg.0=long,j",
      "func.labs.args=1",
      "func.labs.ret=long",
      "func.ldexp.arg.0=arithmetic,value",
      "func.ldexp.arg.1=int,exp",
      "func.ldexp.args=2",
      "func.ldexp.ret=floating_point",
      "func.ldexpf.arg.0=float,value",
      "func.ldexpf.arg.1=int,exp",
      "func.ldexpf.args=2",
      "func.ldexpf.ret=float",
      "func.ldexpl.arg.0=long double,value",
      "func.ldexpl.arg.1=int,exp",
      "func.ldexpl.args=2",
      "func.ldexpl.ret=long double",
      "func.ldiv.arg.0=long,numer",
      "func.ldiv.arg.1=long,denom",
      "func.ldiv.args=2",
      "func.ldiv.ret=ldiv_t",
      "func.lgamma.arg.0=arithmetic,x",
      "func.lgamma.args=1",
      "func.lgamma.ret=floating_point",
      "func.lgammaf.arg.0=float,x",
      "func.lgammaf.args=1",
      "func.lgammaf.ret=float",
      "func.lgammal.arg.0=long double,x",
      "func.lgammal.args=1",
      "func.lgammal.ret=long double",
      "func.llabs.arg.0=long long,j",
      "func.llabs.args=1",
      "func.llabs.ret=long long",
      "func.lldiv.arg.0=long long,numer",
      "func.lldiv.arg.1=long long,denom",
      "func.lldiv.args=2",
      "func.lldiv.ret=lldiv_t",
      "func.llrint.arg.0=arithmetic,x",
      "func.llrint.args=1",
      "func.llrint.ret=long long",
      "func.llrintf.arg.0=float,x",
      "func.llrintf.args=1",
      "func.llrintf.ret=long long",
      "func.llrintl.arg.0=long double,x",
      "func.llrintl.args=1",
      "func.llrintl.ret=long long",
      "func.llround.arg.0=arithmetic,x",
      "func.llround.args=1",
      "func.llround.ret=long long",
      "func.llroundf.arg.0=float,x",
      "func.llroundf.args=1",
      "func.llroundf.ret=long long",
      "func.llroundl.arg.0=long double,x",
      "func.llroundl.args=1",
      "func.llroundl.ret=long long",
      "func.localeconv.args=0",
      "func.localeconv.ret=lconv*",
      "func.localtime.arg.0=const time_t *,timer",
      "func.localtime.args=1",
      "func.localtime.ret=tm*",
      "func.log.arg.0=arithmetic,x",
      "func.log.args=1",
      "func.log.ret=floating_point",
      "func.log10.arg.0=arithmetic,x",
      "func.log10.args=1",
      "func.log10.ret=floating_point",
      "func.log10f.arg.0=float,x",
      "func.log10f.args=1",
      "func.log10f.ret=float",
      "func.log10l.arg.0=long double,x",
      "func.log10l.args=1",
      "func.log10l.ret=long double",
      "func.log1p.arg.0=arithmetic,x",
      "func.log1p.args=1",
      "func.log1p.ret=floating_point",
      "func.log1pf.arg.0=float,x",
      "func.log1pf.args=1",
      "func.log1pf.ret=float",
      "func.log1pl.arg.0=long double,x",
      "func.log1pl.args=1",
      "func.log1pl.ret=long double",
      "func.log2.arg.0=arithmetic,x",
      "func.log2.args=1",
      "func.log2.ret=floating_point",
      "func.log2f.arg.0=float,x",
      "func.log2f.args=1",
      "func.log2f.ret=float",
      "func.log2l.arg.0=long double,x",
      "func.log2l.args=1",
      "func.log2l.ret=long double",
      "func.logb.arg.0=arithmetic,x",
      "func.logb.args=1",
      "func.logb.ret=floating_point",
      "func.logbf.arg.0=float,x",
      "func.logbf.args=1",
      "func.logbf.ret=float",
      "func.logbl.arg.0=long double,x",
      "func.logbl.args=1",
      "func.logbl.ret=long double",
      "func.logf.arg.0=float,x",
      "func.logf.args=1",
      "func.logf.ret=float",
      "func.logl.arg.0=long double,x",
      "func.logl.args=1",
      "func.logl.ret=long double",
      "func.longjmp.arg.0=jmp_buf,env",
      "func.longjmp.arg.1=int,val",
      "func.longjmp.args=2",
      "func.longjmp.ret=void",
      "func.lrint.arg.0=arithmetic,x",
      "func.lrint.args=1",
      "func.lrint.ret=long",
      "func.lrintf.arg.0=float,x",
      "func.lrintf.args=1",
      "func.lrintf.ret=long",
      "func.lrintl.arg.0=long double,x",
      "func.lrintl.args=1",
      "func.lrintl.ret=long",
      "func.lround.arg.0=arithmetic,x",
      "func.lround.args=1",
      "func.lround.ret=long",
      "func.lroundf.arg.0=float,x",
      "func.lroundf.args=1",
      "func.lroundf.ret=long",
      "func.lroundl.arg.0=long double,x",
      "func.lroundl.args=1",
      "func.lroundl.ret=long",
      "func.lstat.arg.0=const char *,path",
      "func.lstat.arg.1=void *,buf",
      "func.lstat.args=2",
      "func.lstat.ret=void",
      "func.main.arg.0=int,argc",
      "func.main.arg.1=char **,argv",
      "func.main.arg.2=char **,envp",
      "func.main.args=3",
      "func.main.ret=int",
      "func.malloc.arg.0=size_t,size",
      "func.malloc.args=1",
      "func.malloc.ret= void *",
      "func.maskrune.arg.0=uint32_t,c",
      "func.maskrune.arg.1=unsigned long,f",
      "func.maskrune.args=2",
      "func.maskrune.ret=int",
      "func.mblen.arg.0=const char *,s",
      "func.mblen.arg.1=size_t,n",
      "func.mblen.args=2",
      "func.mblen.ret=int",
      "func.mbrlen.arg.0=const char *,s",
      "func.mbrlen.arg.1=size_t,n",
      "func.mbrlen.arg.2=mbstate_t *,ps",
      "func.mbrlen.args=3",
      "func.mbrlen.ret=size_t",
      "func.mbrtowc.arg.0=wchar_t *,pwc",
      "func.mbrtowc.arg.1=const char *,s",
      "func.mbrtowc.arg.2=size_t,n",
      "func.mbrtowc.arg.3=mbstate_t *,ps",
      "func.mbrtowc.args=4",
      "func.mbrtowc.ret=size_t",
      "func.mbsinit.arg.0=const mbstate_t *,ps",
      "func.mbsinit.args=1",
      "func.mbsinit.ret=int",
      "func.mbsrtowcs.arg.0=wchar_t *,dst",
      "func.mbsrtowcs.arg.1=const char * *,src",
      "func.mbsrtowcs.arg.2=size_t,len",
      "func.mbsrtowcs.arg.3=mbstate_t *,ps",
      "func.mbsrtowcs.args=4",
      "func.mbsrtowcs.ret=size_t",
      "func.mbstowcs.arg.0=wchar_t *,pwcs",
      "func.mbstowcs.arg.1=const char *,s",
      "func.mbstowcs.arg.2=size_t,n",
      "func.mbstowcs.args=3",
      "func.mbstowcs.ret=size_t",
      "func.mbtowc.arg.0=wchar_t *,pwc",
      "func.mbtowc.arg.1=const char *,s",
      "func.mbtowc.arg.2=size_t,n",
      "func.mbtowc.args=3",
      "func.mbtowc.ret=int",
      "func.memchr.arg.0=void *,s",
      "func.memchr.arg.1=int,c",
      "func.memchr.arg.2=size_t,n",
      "func.memchr.args=3",
      "func.memchr.ret=void *",
      "func.memcmp.arg.0=const void *,s1",
      "func.memcmp.arg.1=const void *,s2",
      "func.memcmp.arg.2=size_t,n",
      "func.memcmp.args=3",
      "func.memcmp.ret=int",
      "func.memcpy.arg.0=void *,s1",
      "func.memcpy.arg.1=const void *,s2",
      "func.memcpy.arg.2=size_t,n",
      "func.memcpy.args=3",
      "func.memcpy.ret=void *",
      "func.memmem.arg.0=const void *,big",
      "func.memmem.arg.1=int,big_len",
      "func.memmem.arg.2=const void *,little",
      "func.memmem.arg.3=int,little_len",
      "func.memmem.args=4",
      "func.memmem.ret=void *",
      "func.memmove.arg.0=void *,s1",
      "func.memmove.arg.1=const void *,s2",
      "func.memmove.arg.2=size_t,n",
      "func.memmove.args=3",
      "func.memmove.ret=void *",
      "func.memset.arg.0=void *,s",
      "func.memset.arg.1=int,c",
      "func.memset.arg.2=size_t,n",
      "func.memset.args=3",
      "func.memset.ret=void *",
      "func.mkstemp.arg.0=char *,template",
      "func.mkstemp.args=1",
      "func.mkstemp.ret=int",
      "func.mktemp.arg.0=char *,template",
      "func.mktemp.args=1",
      "func.mktemp.ret=char *",
      "func.mktime.arg.0=tm *,timeptr",
      "func.mktime.args=1",
      "func.mktime.ret=time_t",
      "func.mmap.arg.0=void*,addr",
      "func.mmap.arg.1=size_t,length",
      "func.mmap.arg.2=int,prot",
      "func.mmap.arg.3=int,flags",
      "func.mmap.arg.4=int,fd",
      "func.mmap.arg.5=size_t,offset",
      "func.mmap.args=6",
      "func.mmap.ret=void*",
      "func.modf.arg.0=floating_point,value",
      "func.modf.arg.1=floating_point *,iptr",
      "func.modf.args=2",
      "func.modf.ret=floating_point",
      "func.modff.arg.0=float,value",
      "func.modff.arg.1=float *,iptr",
      "func.modff.args=2",
      "func.modff.ret=float",
      "func.modfl.arg.0=long double,value",
      "func.modfl.arg.1=long double *,iptr",
      "func.modfl.args=2",
      "func.modfl.ret=long double",
      "func.munmap.arg.0=void*,addr",
      "func.munmap.arg.1=size_t,length",
      "func.munmap.args=2",
      "func.munmap.ret=int",
      "func.nan.arg.0=const char *,str",
      "func.nan.args=1",
      "func.nan.ret=double",
      "func.nanf.arg.0=const char *,str",
      "func.nanf.args=1",
      "func.nanf.ret=float",
      "func.nanl.arg.0=const char *,str",
      "func.nanl.args=1",
      "func.nanl.ret=long double",
      "func.nanosleep.arg.0=const struct timespec *,req",
      "func.nanosleep.arg.1=struct timespec *,rem",
      "func.nanosleep.args=2",
      "func.nanosleep.ret=int",
      "func.nearbyint.arg.0=arithmetic,x",
      "func.nearbyint.args=1",
      "func.nearbyint.ret=floating_point",
      "func.nearbyintf.arg.0=float,x",
      "func.nearbyintf.args=1",
      "func.nearbyintf.ret=float",
      "func.nearbyintl.arg.0=long double,x",
      "func.nearbyintl.args=1",
      "func.nearbyintl.ret=long double",
      "func.nextafter.arg.0=arithmetic,x",
      "func.nextafter.arg.1=arithmetic,y",
      "func.nextafter.args=2",
      "func.nextafter.ret=floating_point",
      "func.nextafterf.arg.0=float,x",
      "func.nextafterf.arg.1=float,y",
      "func.nextafterf.args=2",
      "func.nextafterf.ret=float",
      "func.nextafterl.arg.0=long double,x",
      "func.nextafterl.arg.1=long double,y",
      "func.nextafterl.args=2",
      "func.nextafterl.ret=long double",
      "func.nexttoward.arg.0=arithmetic,x",
      "func.nexttoward.arg.1=long double,y",
      "func.nexttoward.args=2",
      "func.nexttoward.ret=floating_point",
      "func.nexttowardf.arg.0=float,x",
      "func.nexttowardf.arg.1=long double,y",
      "func.nexttowardf.args=2",
      "func.nexttowardf.ret=float",
      "func.nexttowardl.arg.0=long double,x",
      "func.nexttowardl.arg.1=long double,y",
      "func.nexttowardl.args=2",
      "func.nexttowardl.ret=long double",
      "func.nl_langinfo.arg.0=nl_item,item",
      "func.nl_langinfo.args=1",
      "func.nl_langinfo.ret=char *",
      "func.nl_langinfo_l.arg.0=nl_item,item",
      "func.nl_langinfo_l.arg.1=locale_t locale",
      "func.nl_langinfo_l.args=2",
      "func.nl_langinfo_l.ret=char *",
      "func.objc_allocWithZone.arg.0=void *",
      "func.objc_allocWithZone.args=1",
      "func.objc_allocWithZone.ret=void *",
      "func.objc_enumerationMutation.arg.0=void *,instance",
      "func.objc_enumerationMutation.args=1",
      "func.objc_enumerationMutation.ret=void",
      "func.objc_msgSend.arg.0=void *,instance",
      "func.objc_msgSend.arg.1=char *,selector",
      "func.objc_msgSend.args=2",
      "func.objc_msgSend.ret=void *",
      "func.objc_msgSendSuper2.arg.0=void *,instance",
      "func.objc_msgSendSuper2.arg.1=char *,selector",
      "func.objc_msgSendSuper2.args=2",
      "func.objc_msgSendSuper2.ret=void *",
      "func.objc_opt_self.arg.0=void *",
      "func.objc_opt_self.args=1",
      "func.objc_opt_self.ret=void *",
      "func.objc_release.arg.0=void *,instance",
      "func.objc_release.args=1",
      "func.objc_release.ret=void",
      "func.objc_retain.arg.0=void *,instance",
      "func.objc_retain.args=1",
      "func.objc_retain.ret=void",
      "func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance",
      "func.objc_retainAutoreleasedReturnValue.args=1",
      "func.objc_retainAutoreleasedReturnValue.ret=void",
      "func.objc_storeStrong.arg.0=void *,instance",
      "func.objc_storeStrong.arg.1=int,type",
      "func.objc_storeStrong.args=2",
      "func.objc_storeStrong.ret=void *",
      "func.open.arg.0=const char *,path",
      "func.open.arg.1=int,oflag",
      "func.open.args=2",
      "func.open.ret=int",
      "func.openat.arg.0=int,fd",
      "func.openat.arg.1=const char *,path",
      "func.openat.arg.2=int,oflag",
      "func.openat.args=3",
      "func.openat.ret=int",
      "func.pclose.arg.0=FILE *,stream",
      "func.pclose.args=1",
      "func.pclose.ret=int",
      "func.perror.arg.0=const char *,s",
      "func.perror.args=1",
      "func.perror.ret=void",
      "func.popen.arg.0=const char *,filename",
      "func.popen.arg.1=const char *,mode",
      "func.popen.args=2",
      "func.popen.ret=file*",
      "func.pow.arg.0=arithmetic,x",
      "func.pow.arg.1=arithmetic,y",
      "func.pow.args=2",
      "func.pow.ret=floating_point",
      "func.powf.arg.0=float,x",
      "func.powf.arg.1=float,y",
      "func.powf.args=2",
      "func.powf.ret=float",
      "func.powl.arg.0=long double,x",
      "func.powl.arg.1=long double,y",
      "func.powl.args=2",
      "func.powl.ret=long double",
      "func.prctl.arg.0=int,option",
      "func.prctl.arg.1=unsigned long,v2",
      "func.prctl.arg.2=unsigned long,v3",
      "func.prctl.arg.3=unsigned long,v4",
      "func.prctl.arg.4=unsigned long,v5",
      "func.prctl.args=5",
      "func.prctl.ret=int",
      "func.printf.arg.0=const char *,format",
      "func.printf.args=1",
      "func.printf.ret=int",
      "func.ptrace.arg.0=__ptrace_request,request",
      "func.ptrace.arg.1=pid_t,pid",
      "func.ptrace.arg.2=void*,addr",
      "func.ptrace.arg.3=void*,data",
      "func.ptrace.args=4",
      "func.ptrace.ret=long",
      "func.putc.arg.0=int,c",
      "func.putc.arg.1=FILE *,stream",
      "func.putc.args=2",
      "func.putc.ret=int",
      "func.putchar.arg.0=int,c",
      "func.putchar.args=1",
      "func.putchar.ret=int",
      "func.puts.arg.0=const char *,s",
      "func.puts.args=1",
      "func.puts.ret=int",
      "func.pututxline.arg.0=void *,utx",
      "func.pututxline.args=1",
      "func.pututxline.ret=void *",
      "func.putwc.arg.0=wchar_t,c",
      "func.putwc.arg.1=FILE *,stream",
      "func.putwc.args=2",
      "func.putwc.ret=wint_t",
      "func.putwchar.arg.0=wchar_t,c",
      "func.putwchar.args=1",
      "func.putwchar.ret=wint_t",
      "func.qsort.arg.0=void *,base",
      "func.qsort.arg.1=size_t,nmemb",
      "func.qsort.arg.2=size_t,size",
      "func.qsort.arg.3=int(*compar)(const void *,const void *)",
      "func.qsort.args=4",
      "func.quick_exit.arg.0=int,status",
      "func.quick_exit.args=1",
      "func.quick_exit.ret=void",
      "func.raise.arg.0=int,sig",
      "func.raise.args=1",
      "func.raise.ret=int",
      "func.rand.args=0",
      "func.rand.ret=int",
      "func.random.args=0",
      "func.random.ret=uint32_t",
      "func.read.arg.0=int,fildes",
      "func.read.arg.1=void *,buf",
      "func.read.arg.2=size_t,nbyte",
      "func.read.args=3",
      "func.read.ret=ssize_t",
      "func.realloc.arg.0=void *,ptr",
      "func.realloc.arg.1=size_t,size",
      "func.realloc.args=2",
      "func.realloc.ret=void *",
      "func.reallocf.arg.0=void *,ptr",
      "func.reallocf.arg.1=size_t,size",
      "func.reallocf.args=2",
      "func.reallocf.ret=void *",
      "func.recv.arg.0=int,socket",
      "func.recv.arg.1=void *,buffer",
      "func.recv.arg.2=size_t,length",
      "func.recv.arg.3=int,flags",
      "func.recv.args=4",
      "func.recv.ret=ssize_t",
      "func.remainder.arg.0=arithmetic,x",
      "func.remainder.arg.1=arithmetic,y",
      "func.remainder.args=2",
      "func.remainder.ret=floating_point",
      "func.remainderf.arg.0=float,x",
      "func.remainderf.arg.1=float,y",
      "func.remainderf.args=2",
      "func.remainderf.ret=float",
      "func.remainderl.arg.0=long double,x",
      "func.remainderl.arg.1=long double,y",
      "func.remainderl.args=2",
      "func.remainderl.ret=long double",
      "func.remove.arg.0=const char *,filename",
      "func.remove.args=1",
      "func.remove.ret=int",
      "func.remquo.arg.0=arithmetic,x",
      "func.remquo.arg.1=arithmetic,y",
      "func.remquo.arg.2=int *,pquo",
      "func.remquo.args=3",
      "func.remquo.ret=floating_point",
      "func.remquof.arg.0=float,x",
      "func.remquof.arg.1=float,y",
      "func.remquof.arg.2=int *,pquo",
      "func.remquof.args=3",
      "func.remquof.ret=float",
      "func.remquol.arg.0=long double,x",
      "func.remquol.arg.1=long double,y",
      "func.remquol.arg.2=int *,pquo",
      "func.remquol.args=3",
      "func.remquol.ret=long double",
      "func.rename.arg.0=const char *,oldpath",
      "func.rename.arg.1=const char *,newpath",
      "func.rename.args=2",
      "func.rename.ret=int",
      "func.rewind.arg.0=FILE *,stream",
      "func.rewind.args=1",
      "func.rewind.ret=void",
      "func.rint.arg.0=arithmetic,x",
      "func.rint.args=1",
      "func.rint.ret=floating_point",
      "func.rintf.arg.0=float,x",
      "func.rintf.args=1",
      "func.rintf.ret=float",
      "func.rintl.arg.0=long double,x",
      "func.rintl.args=1",
      "func.rintl.ret=long double",
      "func.round.arg.0=arithmetic,x",
      "func.round.args=1",
      "func.round.ret=floating_point",
      "func.roundf.arg.0=float,x",
      "func.roundf.args=1",
      "func.roundf.ret=float",
      "func.roundl.arg.0=long double,x",
      "func.roundl.args=1",
      "func.roundl.ret=long double",
      "func.scalbln.arg.0=arithmetic,x",
      "func.scalbln.arg.1=long,ex",
      "func.scalbln.args=2",
      "func.scalbln.ret=floating_point",
      "func.scalblnf.arg.0=float,x",
      "func.scalblnf.arg.1=long,ex",
      "func.scalblnf.args=2",
      "func.scalblnf.ret=float",
      "func.scalblnl.arg.0=long double,x",
      "func.scalblnl.arg.1=long,ex",
      "func.scalblnl.args=2",
      "func.scalblnl.ret=long double",
      "func.scalbn.arg.0=arithmetic,x",
      "func.scalbn.arg.1=int,ex",
      "func.scalbn.args=2",
      "func.scalbn.ret=floating_point",
      "func.scalbnf.arg.0=float,x",
      "func.scalbnf.arg.1=int,ex",
      "func.scalbnf.args=2",
      "func.scalbnf.ret=float",
      "func.scalbnl.arg.0=long double,x",
      "func.scalbnl.arg.1=int,ex",
      "func.scalbnl.args=2",
      "func.scalbnl.ret=long double",
      "func.scanf.arg.0=const char *,format",
      "func.scanf.args=1",
      "func.scanf.ret=int",
      "func.select.arg.0=int,nfds",
      "func.select.arg.1=fd_set *,readfds",
      "func.select.arg.2=fd_set *,writefds",
      "func.select.arg.3=fd_set *,exceptfds",
      "func.select.arg.4=struct timeval *,timeout",
      "func.select.args=5",
      "func.select.ret=int",
      "func.send.arg.0=int,socket",
      "func.send.arg.1=void *,buffer",
      "func.send.arg.2=size_t,length",
      "func.send.arg.3=int,flags",
      "func.send.args=4",
      "func.send.ret=ssize_t",
      "func.setbuf.arg.0=FILE *,stream",
      "func.setbuf.arg.1=char *,buf",
      "func.setbuf.args=2",
      "func.setbuf.ret=void",
      "func.setenv.arg.0=const char *,name",
      "func.setenv.arg.1=const char *,value",
      "func.setenv.arg.2=int,overwrite",
      "func.setenv.args=3",
      "func.setenv.ret=int",
      "func.setjmp.arg.0=jmpbuf,env",
      "func.setjmp.args=1",
      "func.setjmp.ret=int",
      "func.setlocale.arg.0=int,category",
      "func.setlocale.arg.1=const char *,locale",
      "func.setlocale.args=2",
      "func.setlocale.ret=char *",
      "func.setsockopt.arg.0=int,sockfd",
      "func.setsockopt.arg.1=int,level",
      "func.setsockopt.arg.2=int,optname",
      "func.setsockopt.arg.3=void *,optval",
      "func.setsockopt.arg.4=socklen_t,optlen",
      "func.setsockopt.args=5",
      "func.setsockopt.ret=int",
      "func.setstate.arg.0=const char *,state",
      "func.setstate.args=1",
      "func.setstate.ret=const char *",
      "func.setvbuf.arg.0=FILE*,stream",
      "func.setvbuf.arg.1=char *,buf",
      "func.setvbuf.arg.2=int,mode",
      "func.setvbuf.arg.3=size_t,size",
      "func.setvbuf.args=4",
      "func.setvbuf.ret=int",
      "func.sigaction.arg.0=int,signum",
      "func.sigaction.arg.1=const struct sigaction *,act",
      "func.sigaction.arg.2=struct sigaction *,oldact",
      "func.sigaction.args=3",
      "func.sigaction.ret=int",
      "func.signal.arg.0=int,sig",
      "func.signal.arg.1=void *,func",
      "func.signal.args=2",
      "func.signal.ret=void",
      "func.signbit.arg.0=arithmetic,x",
      "func.signbit.args=1",
      "func.signbit.ret=bool",
      "func.sin.arg.0=arithmetic,x",
      "func.sin.args=1",
      "func.sin.ret=floating_point",
      "func.sinf.arg.0=float,x",
      "func.sinf.args=1",
      "func.sinf.ret=float",
      "func.sinh.arg.0=arithmetic,x",
      "func.sinh.args=1",
      "func.sinh.ret=floating_point",
      "func.sinhf.arg.0=float,x",
      "func.sinhf.args=1",
      "func.sinhf.ret=float",
      "func.sinhl.arg.0=long double,x",
      "func.sinhl.args=1",
      "func.sinhl.ret=long double",
      "func.sinl.arg.0=long double,x",
      "func.sinl.args=1",
      "func.sinl.ret=long double",
      "func.sleep.arg.0=int,s",
      "func.sleep.args=1",
      "func.sleep.ret=int",
      "func.snprintf.arg.0=char *,s",
      "func.snprintf.arg.1=size_t,size",
      "func.snprintf.arg.2=const char *,format",
      "func.snprintf.arg.3=,...",
      "func.snprintf.args=4",
      "func.snprintf.ret=int",
      "func.snprintf_chk.arg.0=char *,s",
      "func.snprintf_chk.arg.1=size_t,size",
      "func.snprintf_chk.arg.2=const char *,format",
      "func.snprintf_chk.arg.3=,...",
      "func.snprintf_chk.args=4",
      "func.snprintf_chk.ret=int",
      "func.socket.arg.0=int,domain",
      "func.socket.arg.1=int,type",
      "func.socket.arg.2=int,protocol",
      "func.socket.args=3",
      "func.socket.ret=int",
      "func.sprintf.arg.0=char *,s",
      "func.sprintf.arg.1=const char *,format",
      "func.sprintf.arg.2=,...",
      "func.sprintf.args=3",
      "func.sprintf.ret=int",
      "func.sprintf_chk.arg.0=char *,s",
      "func.sprintf_chk.arg.1=const char *,format",
      "func.sprintf_chk.arg.2=,...",
      "func.sprintf_chk.args=3",
      "func.sprintf_chk.ret=int",
      "func.sqrt.arg.0=arithmetic,x",
      "func.sqrt.args=1",
      "func.sqrt.ret=floating_point",
      "func.sqrtf.arg.0=float,x",
      "func.sqrtf.args=1",
      "func.sqrtf.ret=float",
      "func.sqrtl.arg.0=long double,x",
      "func.sqrtl.args=1",
      "func.sqrtl.ret=long double",
      "func.srand.arg.0=int,seed",
      "func.srand.args=1",
      "func.srand.ret=void",
      "func.srandom.arg.0=uint32_t,seed",
      "func.srandom.args=1",
      "func.srandom.ret=uint32_t",
      "func.srandomdev.args=0",
      "func.srandomdev.ret=void",
      "func.sscanf.arg.0=const char *,s",
      "func.sscanf.arg.1=const char *,format",
      "func.sscanf.arg.2= ,...",
      "func.sscanf.args=3",
      "func.sscanf.ret=int",
      "func.strcasecmp.arg.0=const char *,s1",
      "func.strcasecmp.arg.1=const char *,s2",
      "func.strcasecmp.args=2",
      "func.strcasecmp.ret=int",
      "func.strcat.arg.0=char *,s1",
      "func.strcat.arg.1=const char *,s2",
      "func.strcat.args=2",
      "func.strcat.ret=char *",
      "func.strchr.arg.0=const char *,s",
      "func.strchr.arg.1=int,c",
      "func.strchr.args=2",
      "func.strchr.ret=char *",
      "func.strcmp.arg.0=const char *,s1",
      "func.strcmp.arg.1=const char *,s2",
      "func.strcmp.args=2",
      "func.strcmp.ret=int",
      "func.strcoll.arg.0=const char *,s1",
      "func.strcoll.arg.1=const char *,s2",
      "func.strcoll.args=2",
      "func.strcoll.ret=int",
      "func.strcpy.arg.0=char *,dest",
      "func.strcpy.arg.1=const char *,src",
      "func.strcpy.args=2",
      "func.strcpy.ret=char *",
      "func.strcpy_chk.arg.0=char *,dest",
      "func.strcpy_chk.arg.1=const char *,src",
      "func.strcpy_chk.args=2",
      "func.strcpy_chk.ret=char *",
      "func.strcspn.arg.0=const char *,s1",
      "func.strcspn.arg.1=const char *,s2",
      "func.strcspn.args=2",
      "func.strcspn.ret=size_t",
      "func.strdup.arg.0=const char *,src",
      "func.strdup.args=1",
      "func.strdup.ret=char *",
      "func.strerror.arg.0=int,errnum",
      "func.strerror.args=1",
      "func.strerror.ret=char *",
      "func.strftime.arg.0=char *,s",
      "func.strftime.arg.1=size_t,maxsize",
      "func.strftime.arg.2=const char *,format",
      "func.strftime.arg.3=const tm *,timeptr",
      "func.strftime.args=4",
      "func.strftime.ret=size_t",
      "func.strlcpy.arg.0=char *,dest",
      "func.strlcpy.arg.1=const char *,src",
      "func.strlcpy.arg.2=size_t, n",
      "func.strlcpy.args=3",
      "func.strlcpy.ret=char *",
      "func.strlen.arg.0=const char *,s",
      "func.strlen.args=1",
      "func.strlen.ret=size_t",
      "func.strmode.arg.0=int,mode",
      "func.strmode.arg.1=char *,bp",
      "func.strmode.args=2",
      "func.strmode.ret=void",
      "func.strncasecmp.arg.0=const char *,s1",
      "func.strncasecmp.arg.1=const char *,s2",
      "func.strncasecmp.arg.2=size_t,n",
      "func.strncasecmp.args=3",
      "func.strncasecmp.ret=int",
      "func.strncat.arg.0=char *,s1",
      "func.strncat.arg.1=const char *,s2",
      "func.strncat.arg.2=size_t,n",
      "func.strncat.args=3",
      "func.strncat.ret=char *",
      "func.strncmp.arg.0=const char *,s1",
      "func.strncmp.arg.1=const char *,s2",
      "func.strncmp.arg.2=size_t,n",
      "func.strncmp.args=3",
      "func.strncmp.ret=int",
      "func.strncpy.arg.0=char *,dest",
      "func.strncpy.arg.1=const char *,src",
      "func.strncpy.arg.2=size_t, n",
      "func.strncpy.args=3",
      "func.strncpy.ret=char *",
      "func.strndup.arg.0=const char *,src",
      "func.strndup.arg.1=int,n",
      "func.strndup.args=2",
      "func.strndup.ret=char *",
      "func.strpbrk.arg.0=const char *,s1",
      "func.strpbrk.arg.1=const char *,s2",
      "func.strpbrk.args=2",
      "func.strpbrk.ret=char *",
      "func.strrchr.arg.0=const char *,s",
      "func.strrchr.arg.1=int,c",
      "func.strrchr.args=2",
      "func.strrchr.ret=char *",
      "func.strspn.arg.0=const char *,s1",
      "func.strspn.arg.1=const char *,s2",
      "func.strspn.args=2",
      "func.strspn.ret=size_t",
      "func.strstr.arg.0=const char *,s1",
      "func.strstr.arg.1=const char *,s2",
      "func.strstr.args=2",
      "func.strstr.ret=char *",
      "func.strtod.arg.0=const char *,str",
      "func.strtod.arg.1=char * *,endptr",
      "func.strtod.args=2",
      "func.strtod.ret=double",
      "func.strtof.arg.0=const char *,str",
      "func.strtof.arg.1=char * *,endptr",
      "func.strtof.args=2",
      "func.strtof.ret=float",
      "func.strtoimax.arg.0=const char *,str",
      "func.strtoimax.arg.1=char * *,endptr",
      "func.strtoimax.arg.2=int,base",
      "func.strtoimax.args=3",
      "func.strtoimax.ret=intmax_t",
      "func.strtok.arg.0=char *,s1",
      "func.strtok.arg.1=const char *,s2",
      "func.strtok.args=2",
      "func.strtok.ret=char *",
      "func.strtol.arg.0=const char *,str",
      "func.strtol.arg.1=char * *,endptr",
      "func.strtol.arg.2=int,base",
      "func.strtol.args=3",
      "func.strtol.ret=long",
      "func.strtold.arg.0=const char *,str",
      "func.strtold.arg.1=char * *,endptr",
      "func.strtold.args=2",
      "func.strtold.ret=long double",
      "func.strtoll.arg.0=const char *,str",
      "func.strtoll.arg.1=char * *,endptr",
      "func.strtoll.arg.2=int,base",
      "func.strtoll.args=3",
      "func.strtoll.ret=long long",
      "func.strtoul.arg.0=const char *,str",
      "func.strtoul.arg.1=char * *,endptr",
      "func.strtoul.arg.2=int,base",
      "func.strtoul.args=3",
      "func.strtoul.ret=long",
      "func.strtoull.arg.0=const char *,str",
      "func.strtoull.arg.1=char * *,endptr",
      "func.strtoull.arg.2=int,base",
      "func.strtoull.args=3",
      "func.strtoull.ret=long long",
      "func.strtoumax.arg.0=const char *,str",
      "func.strtoumax.arg.1=char * *,endptr",
      "func.strtoumax.arg.2=int,base",
      "func.strtoumax.args=3",
      "func.strtoumax.ret=uintmax_t",
      "func.strxfrm.arg.0=char *,s1",
      "func.strxfrm.arg.1=const char *,s2",
      "func.strxfrm.arg.2=size_t,n",
      "func.strxfrm.args=3",
      "func.strxfrm.ret=size_t",
      "func.swift_beginAccess.arg.0=void *",
      "func.swift_beginAccess.arg.1=void *",
      "func.swift_beginAccess.arg.2=void *",
      "func.swift_beginAccess.arg.3=void *",
      "func.swift_beginAccess.args=4",
      "func.swift_beginAccess.ret=void",
      "func.swift_bridgeObjectRelease.arg.0=void *",
      "func.swift_bridgeObjectRelease.args=1",
      "func.swift_bridgeObjectRelease.ret=void",
      "func.swift_bridgeObjectRetain.arg.0=void *",
      "func.swift_bridgeObjectRetain.args=1",
      "func.swift_bridgeObjectRetain.ret=void *",
      "func.swift_endAccess.arg.0=void *",
      "func.swift_endAccess.args=1",
      "func.swift_endAccess.ret=void",
      "func.swift_getObjCClassFromMetadata.arg.0=void *",
      "func.swift_getObjCClassFromMetadata.args=1",
      "func.swift_getObjCClassFromMetadata.ret=void *",
      "func.swift_initStackObject.arg.0=void *",
      "func.swift_initStackObject.arg.1=void *",
      "func.swift_initStackObject.args=2",
      "func.swift_initStackObject.ret=void *",
      "func.swift_release.arg.0=void *",
      "func.swift_release.args=1",
      "func.swift_release.ret=void",
      "func.swift_unexpectedError.arg.0=void *",
      "func.swift_unexpectedError.args=1",
      "func.swift_unexpectedError.ret=void",
      "func.swprintf.arg.0=wchar_t *,s",
      "func.swprintf.arg.1=size_t,n",
      "func.swprintf.arg.2=const wchar_t *,format",
      "func.swprintf.args=3",
      "func.swprintf.ret=int",
      "func.swscanf.arg.0=const wchar_t *,s",
      "func.swscanf.arg.1=const wchar_t *,format",
      "func.swscanf.args=2",
      "func.swscanf.ret=int",
      "func.sym.__libc_csu_init.arg.0=int32_t,arg_8h",
      "func.sym.__libc_csu_init.arg.1=int32_t,arg_ch",
      "func.sym.__libc_csu_init.arg.2=int32_t,arg_10h",
      "func.sym.__libc_csu_init.args=3",
      "func.sym.shift.arg.0=char *,s",
      "func.sym.shift.args=1",
      "func.sym.test.arg.0=int32_t,arg_8h",
      "func.sym.test.arg.1=uint32_t,arg_ch",
      "func.sym.test.args=2",
      "func.symlink.arg.0=const char *,path1",
      "func.symlink.arg.1=const char *,path2",
      "func.symlink.args=2",
      "func.symlink.ret=int",
      "func.system.arg.0=const char *,string",
      "func.system.args=1",
      "func.system.ret=int",
      "func.tan.arg.0=arithmetic,x",
      "func.tan.args=1",
      "func.tan.ret=floating_point",
      "func.tanf.arg.0=float,x",
      "func.tanf.args=1",
      "func.tanf.ret=float",
      "func.tanh.arg.0=arithmetic,x",
      "func.tanh.args=1",
      "func.tanh.ret=floating_point",
      "func.tanhf.arg.0=float,x",
      "func.tanhf.args=1",
      "func.tanhf.ret=float",
      "func.tanhl.arg.0=long double,x",
      "func.tanhl.args=1",
      "func.tanhl.ret=long double",
      "func.tanl.arg.0=long double,x",
      "func.tanl.args=1",
      "func.tanl.ret=long double",
      "func.textdomain.arg.0=char *,domainname",
      "func.textdomain.args=1",
      "func.textdomain.ret=char *",
      "func.tgamma.arg.0=arithmetic,x",
      "func.tgamma.args=1",
      "func.tgamma.ret=floating_point",
      "func.tgammaf.arg.0=float,x",
      "func.tgammaf.args=1",
      "func.tgammaf.ret=float",
      "func.tgammal.arg.0=long double,x",
      "func.tgammal.args=1",
      "func.tgammal.ret=long double",
      "func.tgoto.arg.0=const char *,cap",
      "func.tgoto.arg.1=int,col",
      "func.tgoto.arg.2=int,row",
      "func.tgoto.args=3",
      "func.tgoto.ret=char *",
      "func.time.arg.0=time_t *,timer",
      "func.time.args=1",
      "func.time.ret=time_t",
      "func.tmpfile.args=0",
      "func.tmpfile.ret=file*",
      "func.tmpnam.arg.0=char *,s",
      "func.tmpnam.args=1",
      "func.tmpnam.ret=char *",
      "func.tolower.arg.0=int,c",
      "func.tolower.args=1",
      "func.tolower.ret=int",
      "func.toupper.arg.0=int,c",
      "func.toupper.args=1",
      "func.toupper.ret=int",
      "func.towctrans.arg.0=wint_t,wc",
      "func.towctrans.arg.1=wctrans_t,desc",
      "func.towctrans.args=2",
      "func.towctrans.ret=wint_t",
      "func.towlower.arg.0=wint_t,wc",
      "func.towlower.args=1",
      "func.towlower.ret=wint_t",
      "func.towupper.arg.0=wint_t,wc",
      "func.towupper.args=1",
      "func.towupper.ret=wint_t",
      "func.trunc.arg.0=arithmetic,x",
      "func.trunc.args=1",
      "func.trunc.ret=floating_point",
      "func.truncf.arg.0=float,x",
      "func.truncf.args=1",
      "func.truncf.ret=float",
      "func.truncl.arg.0=long double,x",
      "func.truncl.args=1",
      "func.truncl.ret=long double",
      "func.umask.arg.0=int,m",
      "func.umask.args=1",
      "func.umask.ret=int",
      "func.ungetc.arg.0=int,c",
      "func.ungetc.arg.1=FILE *,stream",
      "func.ungetc.args=2",
      "func.ungetc.ret=int",
      "func.ungetwc.arg.0=wint_t,c",
      "func.ungetwc.arg.1=FILE *,stream",
      "func.ungetwc.args=2",
      "func.ungetwc.ret=wint_t",
      "func.unlink.arg.0=const char *,path",
      "func.unlink.args=1",
      "func.unlink.ret=int",
      "func.user_from_uid.arg.0=uid_t,uid",
      "func.user_from_uid.arg.1=int,nouser",
      "func.user_from_uid.args=2",
      "func.user_from_uid.include=pwd.h",
      "func.user_from_uid.ret=char *",
      "func.usleep.arg.0=int,s",
      "func.usleep.args=1",
      "func.usleep.ret=int",
      "func.vfprintf.arg.0=FILE *,stream",
      "func.vfprintf.arg.1=const char *,format",
      "func.vfprintf.arg.2=va_list,ap",
      "func.vfprintf.args=3",
      "func.vfprintf.ret=int",
      "func.vfscanf.arg.0=FILE *,stream",
      "func.vfscanf.arg.1=const char *,format",
      "func.vfscanf.arg.2=va_list,ap",
      "func.vfscanf.args=3",
      "func.vfscanf.ret=int",
      "func.vfwprintf.arg.0=FILE *,stream",
      "func.vfwprintf.arg.1=const wchar_t *,format",
      "func.vfwprintf.arg.2=va_list,arg",
      "func.vfwprintf.args=3",
      "func.vfwprintf.ret=int",
      "func.vfwscanf.arg.0=FILE *,stream",
      "func.vfwscanf.arg.1=const wchar_t *,format",
      "func.vfwscanf.arg.2=va_list,arg",
      "func.vfwscanf.args=3",
      "func.vfwscanf.ret=int",
      "func.vprintf.arg.0=const char *,format",
      "func.vprintf.arg.1=va_list,ap",
      "func.vprintf.args=2",
      "func.vprintf.ret=int",
      "func.vscanf.arg.0=const char *,format",
      "func.vscanf.arg.1=va_list,ap",
      "func.vscanf.args=2",
      "func.vscanf.ret=int",
      "func.vsnprintf.arg.0=char *,s",
      "func.vsnprintf.arg.1=size_t,size",
      "func.vsnprintf.arg.2=const char *,format",
      "func.vsnprintf.arg.3=va_list,arg",
      "func.vsnprintf.args=4",
      "func.vsnprintf.ret=int",
      "func.vsprintf.arg.0=char *,s",
      "func.vsprintf.arg.1=const char *,format",
      "func.vsprintf.arg.2=va_list,arg",
      "func.vsprintf.args=3",
      "func.vsprintf.ret=int",
      "func.vsscanf.arg.0=const char *,s",
      "func.vsscanf.arg.1=const char *,format",
      "func.vsscanf.arg.2=va_list,arg",
      "func.vsscanf.args=3",
      "func.vsscanf.ret=int",
      "func.vswprintf.arg.0=wchar_t *,s",
      "func.vswprintf.arg.1=size_t,n",
      "func.vswprintf.arg.2=const wchar_t *,format",
      "func.vswprintf.arg.3=va_list,arg",
      "func.vswprintf.args=4",
      "func.vswprintf.ret=int",
      "func.vswscanf.arg.0=const wchar_t *,s",
      "func.vswscanf.arg.1=const wchar_t *,format",
      "func.vswscanf.arg.2=va_list,arg",
      "func.vswscanf.args=3",
      "func.vswscanf.ret=int",
      "func.vwprintf.arg.0=const wchar_t *,format",
      "func.vwprintf.arg.1=va_list,arg",
      "func.vwprintf.args=2",
      "func.vwprintf.ret=int",
      "func.vwscanf.arg.0=const wchar_t *,format",
      "func.vwscanf.arg.1=va_list,arg",
      "func.vwscanf.args=2",
      "func.vwscanf.ret=int",
      "func.wait.arg.0=int *,wstatus",
      "func.wait.args=1",
      "func.wait.ret=pid_t",
      "func.waitid.arg.0=idtype_t,idtype",
      "func.waitid.arg.1=id_t,id",
      "func.waitid.arg.2=siginfo_t *,infop",
      "func.waitid.arg.3=int,options",
      "func.waitid.args=4",
      "func.waitid.ret=int",
      "func.waitpid.arg.0=pid_t,pid",
      "func.waitpid.arg.1=int *,wstatus",
      "func.waitpid.arg.2=int,options",
      "func.waitpid.args=3",
      "func.waitpid.ret=pid_t",
      "func.warn.arg.0=const char *,format",
      "func.warn.args=1",
      "func.warn.ret=void",
      "func.warnc.arg.0=const char *,format",
      "func.warnc.arg.1=int,opt",
      "func.warnc.args=2",
      "func.warnc.ret=void",
      "func.warnx.arg.0=const char *,format",
      "func.warnx.args=1",
      "func.warnx.ret=void",
      "func.wcrtomb.arg.0=char *,s",
      "func.wcrtomb.arg.1=wchar_t,wc",
      "func.wcrtomb.arg.2=mbstate_t *,ps",
      "func.wcrtomb.args=3",
      "func.wcrtomb.ret=size_t",
      "func.wcscat.arg.0=wchar_t *,s1",
      "func.wcscat.arg.1=const wchar_t *,s2",
      "func.wcscat.args=2",
      "func.wcscat.ret=wchar_t*",
      "func.wcschr.arg.0=wchar_t *,s",
      "func.wcschr.arg.1=wchar_t,c",
      "func.wcschr.args=2",
      "func.wcschr.ret=wchar_t*",
      "func.wcscmp.arg.0=const wchar_t *,s1",
      "func.wcscmp.arg.1=const wchar_t *,s2",
      "func.wcscmp.args=2",
      "func.wcscmp.ret=int",
      "func.wcscoll.arg.0=const wchar_t *,s1",
      "func.wcscoll.arg.1=const wchar_t *,s2",
      "func.wcscoll.args=2",
      "func.wcscoll.ret=int",
      "func.wcscpy.arg.0=wchar_t *,s1",
      "func.wcscpy.arg.1=const wchar_t *,s2",
      "func.wcscpy.args=2",
      "func.wcscpy.ret=wchar_t*",
      "func.wcscspn.arg.0=const wchar_t *,s1",
      "func.wcscspn.arg.1=const wchar_t *,s2",
      "func.wcscspn.args=2",
      "func.wcscspn.ret=size_t",
      "func.wcsftime.arg.0=wchar_t *,s",
      "func.wcsftime.arg.1=size_t,maxsize",
      "func.wcsftime.arg.2=const wchar_t *,format",
      "func.wcsftime.arg.3=const tm *,timeptr",
      "func.wcsftime.args=4",
      "func.wcsftime.ret=size_t",
      "func.wcslen.arg.0=const wchar_t *,s",
      "func.wcslen.args=1",
      "func.wcslen.ret=size_t",
      "func.wcsncat.arg.0=wchar_t *,s1",
      "func.wcsncat.arg.1=const wchar_t *,s2",
      "func.wcsncat.arg.2=size_t,n",
      "func.wcsncat.args=3",
      "func.wcsncat.ret=wchar_t*",
      "func.wcsncmp.arg.0=const wchar_t *,s1",
      "func.wcsncmp.arg.1=const wchar_t *,s2",
      "func.wcsncmp.arg.2=size_t,n",
      "func.wcsncmp.args=3",
      "func.wcsncmp.ret=int",
      "func.wcsncpy.arg.0=wchar_t *,s1",
      "func.wcsncpy.arg.1=const wchar_t *,s2",
      "func.wcsncpy.arg.2=size_t,n",
      "func.wcsncpy.args=3",
      "func.wcsncpy.ret=wchar_t*",
      "func.wcspbrk.arg.0=wchar_t *,s1",
      "func.wcspbrk.arg.1=const wchar_t *,s2",
      "func.wcspbrk.args=2",
      "func.wcspbrk.ret=wchar_t*",
      "func.wcsrchr.arg.0=wchar_t *,s",
      "func.wcsrchr.arg.1=wchar_t,c",
      "func.wcsrchr.args=2",
      "func.wcsrchr.ret=wchar_t*",
      "func.wcsrtombs.arg.0=char *,dst",
      "func.wcsrtombs.arg.1=const wchar_t* *,src",
      "func.wcsrtombs.arg.2=size_t,len",
      "func.wcsrtombs.arg.3=mbstate_t *,ps",
      "func.wcsrtombs.args=4",
      "func.wcsrtombs.ret=size_t",
      "func.wcsspn.arg.0=const wchar_t *,s1",
      "func.wcsspn.arg.1=const wchar_t *,s2",
      "func.wcsspn.args=2",
      "func.wcsspn.ret=size_t",
      "func.wcsstr.arg.0=wchar_t *,s1",
      "func.wcsstr.arg.1=const wchar_t *,s2",
      "func.wcsstr.args=2",
      "func.wcsstr.ret=wchar_t*",
      "func.wcstod.arg.0=const wchar_t *,nptr",
      "func.wcstod.arg.1=wchar_t* *,endptr",
      "func.wcstod.args=2",
      "func.wcstod.ret=double",
      "func.wcstof.arg.0=const wchar_t *,nptr",
      "func.wcstof.arg.1=wchar_t* *,endptr",
      "func.wcstof.args=2",
      "func.wcstof.ret=float",
      "func.wcstoimax.arg.0=const,wchar_t*",
      "func.wcstoimax.arg.1=wchar_t* *,endptr",
      "func.wcstoimax.arg.2=int,base",
      "func.wcstoimax.args=3",
      "func.wcstoimax.ret=intmax_t",
      "func.wcstok.arg.0=wchar_t *,s1",
      "func.wcstok.arg.1=const wchar_t *,s2",
      "func.wcstok.arg.2=wchar_t* *,ptr",
      "func.wcstok.args=3",
      "func.wcstok.ret=wchar_t*",
      "func.wcstol.arg.0=const wchar_t *,nptr",
      "func.wcstol.arg.1=wchar_t* *,endptr",
      "func.wcstol.arg.2=int,base",
      "func.wcstol.args=3",
      "func.wcstol.ret=long",
      "func.wcstold.arg.0=const wchar_t *,nptr",
      "func.wcstold.arg.1=wchar_t* *,endptr",
      "func.wcstold.args=2",
      "func.wcstold.ret=long double",
      "func.wcstoll.arg.0=const wchar_t *,nptr",
      "func.wcstoll.arg.1=wchar_t* *,endptr",
      "func.wcstoll.arg.2=int,base",
      "func.wcstoll.args=3",
      "func.wcstoll.ret=long long",
      "func.wcstombs.arg.0=char *,s",
      "func.wcstombs.arg.1=const wchar_t *,pwcs",
      "func.wcstombs.arg.2=size_t,n",
      "func.wcstombs.args=3",
      "func.wcstombs.ret=size_t",
      "func.wcstoul.arg.0=const wchar_t *,nptr",
      "func.wcstoul.arg.1=wchar_t* *,endptr",
      "func.wcstoul.arg.2=int,base",
      "func.wcstoul.args=3",
      "func.wcstoul.ret=long",
      "func.wcstoull.arg.0=const wchar_t *,nptr",
      "func.wcstoull.arg.1=wchar_t* *,endptr",
      "func.wcstoull.arg.2=int,base",
      "func.wcstoull.args=3",
      "func.wcstoull.ret=long long",
      "func.wcstoumax.arg.0=const,wchar_t*",
      "func.wcstoumax.arg.1=wchar_t* *,endptr",
      "func.wcstoumax.arg.2=int,base",
      "func.wcstoumax.args=3",
      "func.wcstoumax.ret=uintmax_t",
      "func.wcsxfrm.arg.0=wchar_t *,s1",
      "func.wcsxfrm.arg.1=const wchar_t *,s2",
      "func.wcsxfrm.arg.2=size_t,n",
      "func.wcsxfrm.args=3",
      "func.wcsxfrm.ret=size_t",
      "func.wctob.arg.0=wint_t,c",
      "func.wctob.args=1",
      "func.wctob.ret=int",
      "func.wctomb.arg.0=char *,s",
      "func.wctomb.arg.1=wchar_t,wchar",
      "func.wctomb.args=2",
      "func.wctomb.ret=int",
      "func.wctrans.arg.0=const char *,property",
      "func.wctrans.args=1",
      "func.wctrans.ret=wctrans_t",
      "func.wctype.arg.0=const char *,property",
      "func.wctype.args=1",
      "func.wctype.ret=wctype_t",
      "func.wmemchr.arg.0=wchar_t *,s",
      "func.wmemchr.arg.1=wchar_t,c",
      "func.wmemchr.arg.2=size_t,n",
      "func.wmemchr.args=3",
      "func.wmemchr.ret=wchar_t*",
      "func.wmemcmp.arg.0=wchar_t *,s1",
      "func.wmemcmp.arg.1=const wchar_t *,s2",
      "func.wmemcmp.arg.2=size_t,n",
      "func.wmemcmp.args=3",
      "func.wmemcmp.ret=int",
      "func.wmemcpy.arg.0=wchar_t *,s1",
      "func.wmemcpy.arg.1=const wchar_t *,s2",
      "func.wmemcpy.arg.2=size_t,n",
      "func.wmemcpy.args=3",
      "func.wmemcpy.ret=wchar_t*",
      "func.wmemmove.arg.0=wchar_t *,s1",
      "func.wmemmove.arg.1=const wchar_t *,s2",
      "func.wmemmove.arg.2=size_t,n",
      "func.wmemmove.args=3",
      "func.wmemmove.ret=wchar_t*",
      "func.wmemset.arg.0=wchar_t *,s",
      "func.wmemset.arg.1=wchar_t,c",
      "func.wmemset.arg.2=size_t,n",
      "func.wmemset.args=3",
      "func.wmemset.ret=wchar_t*",
      "func.wprintf.arg.0=const wchar_t *,format",
      "func.wprintf.args=1",
      "func.wprintf.ret=int",
      "func.write.arg.0=int,fd",
      "func.write.arg.1=const char *,ptr",
      "func.write.arg.2=size_t,nbytes",
      "func.write.args=3",
      "func.write.ret=ssize_t",
      "func.wscanf.arg.0=const wchar_t *,format",
      "func.wscanf.args=1",
      "func.wscanf.ret=int",
      "func.xalloc_die.args=0",
      "func.xalloc_die.noreturn=true",
      "func.xalloc_die.ret=void",
      "func.xmalloc.arg.0=size_t,size",
      "func.xmalloc.args=1",
      "func.xmalloc.ret= void *",
      "fwide=func",
      "fwprintf=func",
      "fwrite=func",
      "fwscanf=func",
      "getc=func",
      "getchar=func",
      "getenv=func",
      "geteuid=func",
      "getopt=func",
      "getpid=func",
      "getprogname=func",
      "gets=func",
      "getsockname=func",
      "getsockopt=func",
      "getuid=func",
      "getwc=func",
      "getwchar=func",
      "gid_t=type",
      "gmtime=func",
      "group_from_gid=func",
      "humanize_number=func",
      "hypot=func",
      "hypotf=func",
      "hypotl=func",
      "ilogb=func",
      "ilogbf=func",
      "ilogbl=func",
      "imaxabs=func",
      "imaxdiv=func",
      "inet_aton=func",
      "inet_ntoa=func",
      "initstate=func",
      "int=type",
      "int16_t=type",
      "int32_t=type",
      "int64_t=type",
      "int8_t=type",
      "ioctl=func",
      "isalnum=func",
      "isalpha=func",
      "isatty=func",
      "isblank=func",
      "iscntrl=func",
      "isdigit=func",
      "isfinite=func",
      "isgraph=func",
      "isgreater=func",
      "isgreaterequal=func",
      "isinf=func",
      "isless=func",
      "islessequal=func",
      "islessgreater=func",
      "islower=func",
      "isnan=func",
      "isnormal=func",
      "isprint=func",
      "ispunct=func",
      "isspace=func",
      "isunordered=func",
      "isupper=func",
      "iswalnum=func",
      "iswalpha=func",
      "iswblank=func",
      "iswcntrl=func",
      "iswctype=func",
      "iswdigit=func",
      "iswgraph=func",
      "iswlower=func",
      "iswprint=func",
      "iswpunct=func",
      "iswspace=func",
      "iswupper=func",
      "iswxdigit=func",
      "isxdigit=func",
      "kill=func",
      "labs=func",
      "ldexp=func",
      "ldexpf=func",
      "ldexpl=func",
      "ldiv=func",
      "lgamma=func",
      "lgammaf=func",
      "lgammal=func",
      "llabs=func",
      "lldiv=func",
      "llrint=func",
      "llrintf=func",
      "llrintl=func",
      "llround=func",
      "llroundf=func",
      "llroundl=func",
      "localeconv=func",
      "localtime=func",
      "log=func",
      "log10=func",
      "log10f=func",
      "log10l=func",
      "log1p=func",
      "log1pf=func",
      "log1pl=func",
      "log2=func",
      "log2f=func",
      "log2l=func",
      "logb=func",
      "logbf=func",
      "logbl=func",
      "logf=func",
      "logl=func",
      "long=type",
      "long long=type",
      "longjmp=func",
      "lrint=func",
      "lrintf=func",
      "lrintl=func",
      "lround=func",
      "lroundf=func",
      "lroundl=func",
      "lstat=func",
      "main=func",
      "malloc=func",
      "maskrune=func",
      "mblen=func",
      "mbrlen=func",
      "mbrtowc=func",
      "mbsinit=func",
      "mbsrtowcs=func",
      "mbstowcs=func",
      "mbtowc=func",
      "memchr=func",
      "memcmp=func",
      "memcpy=func",
      "memmem=func",
      "memmove=func",
      "memset=func",
      "mkstemp=func",
      "mktemp=func",
      "mktime=func",
      "mmap=func",
      "modf=func",
      "modff=func",
      "modfl=func",
      "munmap=func",
      "nan=func",
      "nanf=func",
      "nanl=func",
      "nanosleep=func",
      "nearbyint=func",
      "nearbyintf=func",
      "nearbyintl=func",
      "nextafter=func",
      "nextafterf=func",
      "nextafterl=func",
      "nexttoward=func",
      "nexttowardf=func",
      "nexttowardl=func",
      "nl_langinfo=func",
      "nl_langinfo_l=func",
      "objc_allocWithZone=func",
      "objc_enumerationMutation=func",
      "objc_msgSend=func",
      "objc_msgSendSuper2=func",
      "objc_opt_self=func",
      "objc_release=func",
      "objc_retain=func",
      "objc_retainAutoreleasedReturnValue=func",
      "objc_storeStrong=func",
      "open=func",
      "openat=func",
      "pclose=func",
      "perror=func",
      "pid_t=type",
      "popen=func",
      "pow=func",
      "powf=func",
      "powl=func",
      "prctl=func",
      "printf=func",
      "ptrace=func",
      "putc=func",
      "putchar=func",
      "puts=func",
      "pututxline=func",
      "putwc=func",
      "putwchar=func",
      "qsort=func",
      "quick_exit=func",
      "raise=func",
      "rand=func",
      "random=func",
      "read=func",
      "realloc=func",
      "reallocf=func",
      "recv=func",
      "remainder=func",
      "remainderf=func",
      "remainderl=func",
      "remove=func",
      "remquo=func",
      "remquof=func",
      "remquol=func",
      "rename=func",
      "rewind=func",
      "rint=func",
      "rintf=func",
      "rintl=func",
      "round=func",
      "roundf=func",
      "roundl=func",
      "scalbln=func",
      "scalblnf=func",
      "scalblnl=func",
      "scalbn=func",
      "scalbnf=func",
      "scalbnl=func",
      "scanf=func",
      "select=func",
      "send=func",
      "setbuf=func",
      "setenv=func",
      "setjmp=func",
      "setlocale=func",
      "setsockopt=func",
      "setstate=func",
      "setvbuf=func",
      "short=type",
      "sigaction=func",
      "signal=func",
      "signbit=func",
      "sin=func",
      "sinf=func",
      "sinh=func",
      "sinhf=func",
      "sinhl=func",
      "sinl=func",
      "size_t=type",
      "sleep=func",
      "snprintf=func",
      "snprintf_chk=func",
      "socket=func",
      "sprintf=func",
      "sprintf_chk=func",
      "sqrt=func",
      "sqrtf=func",
      "sqrtl=func",
      "srand=func",
      "srandom=func",
      "srandomdev=func",
      "sscanf=func",
      "strcasecmp=func",
      "strcat=func",
      "strchr=func",
      "strcmp=func",
      "strcoll=func",
      "strcpy=func",
      "strcpy_chk=func",
      "strcspn=func",
      "strdup=func",
      "strerror=func",
      "strftime=func",
      "strlcpy=func",
      "strlen=func",
      "strmode=func",
      "strncasecmp=func",
      "strncat=func",
      "strncmp=func",
      "strncpy=func",
      "strndup=func",
      "strpbrk=func",
      "strrchr=func",
      "strspn=func",
      "strstr=func",
      "strtod=func",
      "strtof=func",
      "strtoimax=func",
      "strtok=func",
      "strtol=func",
      "strtold=func",
      "strtoll=func",
      "strtoul=func",
      "strtoull=func",
      "strtoumax=func",
      "strxfrm=func",
      "swift_beginAccess=func",
      "swift_bridgeObjectRelease=func",
      "swift_bridgeObjectRetain=func",
      "swift_endAccess=func",
      "swift_getObjCClassFromMetadata=func",
      "swift_initStackObject=func",
      "swift_release=func",
      "swift_unexpectedError=func",
      "swprintf=func",
      "swscanf=func",
      "symlink=func",
      "system=func",
      "tan=func",
      "tanf=func",
      "tanh=func",
      "tanhf=func",
      "tanhl=func",
      "tanl=func",
      "textdomain=func",
      "tgamma=func",
      "tgammaf=func",
      "tgammal=func",
      "tgoto=func",
      "time=func",
      "tmpfile=func",
      "tmpnam=func",
      "tolower=func",
      "toupper=func",
      "towctrans=func",
      "towlower=func",
      "towupper=func",
      "trunc=func",
      "truncf=func",
      "truncl=func",
      "type.char=c",
      "type.char *=z",
      "type.char **=*z",
      "type.char *.size=32",
      "type.char.size=8",
      "type.double=F",
      "type.double.size=64",
      "type.float=f",
      "type.float.size=32",
      "type.gid_t=d",
      "type.gid_t.uid=32",
      "type.int=d",
      "type.int.size=32",
      "type.int16_t=w",
      "type.int16_t.size=16",
      "type.int32_t=d",
      "type.int32_t.size=32",
      "type.int64_t=q",
      "type.int64_t.size=64",
      "type.int8_t=b",
      "type.int8_t.size=8",
      "type.long=x",
      "type.long long=q",
      "type.long long.size=64",
      "type.long.size=64",
      "type.pid_t=d",
      "type.pid_t.pid=32",
      "type.short=w",
      "type.short.size=16",
      "type.size_t=d",
      "type.size_t.size=32",
      "type.uid_t=d",
      "type.uid_t.size=64",
      "type.uid_t.uid=32",
      "type.uint16_t=w",
      "type.uint16_t.size=16",
      "type.uint32_t=d",
      "type.uint32_t.size=32",
      "type.uint64_t=q",
      "type.uint64_t.size=64",
      "type.uint8_t=b",
      "type.uint8_t.size=8",
      "type.unsigned char=b",
      "type.unsigned char.size=8",
      "type.unsigned int=i",
      "type.unsigned int.size=32",
      "type.unsigned short=w",
      "type.unsigned short.size=16",
      "type.void *=p",
      "type.void *.size=32",
      "uid_t=type",
      "uint16_t=type",
      "uint32_t=type",
      "uint64_t=type",
      "uint8_t=type",
      "umask=func",
      "ungetc=func",
      "ungetwc=func",
      "unlink=func",
      "unsigned char=type",
      "unsigned int=type",
      "unsigned short=type",
      "user_from_uid=func",
      "usleep=func",
      "vfprintf=func",
      "vfscanf=func",
      "vfwprintf=func",
      "vfwscanf=func",
      "void *=type",
      "vprintf=func",
      "vscanf=func",
      "vsnprintf=func",
      "vsprintf=func",
      "vsscanf=func",
      "vswprintf=func",
      "vswscanf=func",
      "vwprintf=func",
      "vwscanf=func",
      "wait=func",
      "waitid=func",
      "waitpid=func",
      "warn=func",
      "warnc=func",
      "warnx=func",
      "wcrtomb=func",
      "wcscat=func",
      "wcschr=func",
      "wcscmp=func",
      "wcscoll=func",
      "wcscpy=func",
      "wcscspn=func",
      "wcsftime=func",
      "wcslen=func",
      "wcsncat=func",
      "wcsncmp=func",
      "wcsncpy=func",
      "wcspbrk=func",
      "wcsrchr=func",
      "wcsrtombs=func",
      "wcsspn=func",
      "wcsstr=func",
      "wcstod=func",
      "wcstof=func",
      "wcstoimax=func",
      "wcstok=func",
      "wcstol=func",
      "wcstold=func",
      "wcstoll=func",
      "wcstombs=func",
      "wcstoul=func",
      "wcstoull=func",
      "wcstoumax=func",
      "wcsxfrm=func",
      "wctob=func",
      "wctomb=func",
      "wctrans=func",
      "wctype=func",
      "wmemchr=func",
      "wmemcmp=func",
      "wmemcpy=func",
      "wmemmove=func",
      "wmemset=func",
      "wprintf=func",
      "write=func",
      "wscanf=func",
      "xalloc_die=func",
      "xmalloc=func",
      "spec",
      "gcc=spec",
      "spec.gcc.c=char",
      "spec.gcc.d=int",
      "spec.gcc.f=float",
      "spec.gcc.g=double",
      "spec.gcc.ld=long int",
      "spec.gcc.lf=double",
      "spec.gcc.li=long int",
      "spec.gcc.lld=long long int",
      "spec.gcc.lli=long long int",
      "spec.gcc.llu=unsigned long long int",
      "spec.gcc.lu=unsigned long int",
      "spec.gcc.p=void *",
      "spec.gcc.s=const char *",
      "spec.gcc.u=unsigned int",
      "cc",
      "borland=cc",
      "cc.borland.arg0=eax",
      "cc.borland.arg1=edx",
      "cc.borland.arg2=ecx",
      "cc.borland.argn=stack_rev",
      "cc.borland.ret=eax",
      "cc.cdecl-fastcall-ms.arg0=ecx",
      "cc.cdecl-fastcall-ms.argn=stack",
      "cc.cdecl-fastcall-ms.ret=eax",
      "cc.cdecl.argn=stack",
      "cc.cdecl.ret=eax",
      "cc.dlang.arg0=edi",
      "cc.dlang.arg1=esi",
      "cc.dlang.arg2=edx",
      "cc.dlang.arg3=ecx",
      "cc.dlang.arg4=r8d",
      "cc.dlang.arg5=r9d",
      "cc.dlang.argn=stack_rev",
      "cc.dlang.ret=eax",
      "cc.dlang.ret2=edx",
      "cc.dlang.revarg=1",
      "cc.fastcall.arg0=ecx",
      "cc.fastcall.arg1=edx",
      "cc.fastcall.argn=stack",
      "cc.fastcall.ret=eax",
      "cc.optlink.arg0=eax",
      "cc.optlink.arg1=edx",
      "cc.optlink.arg2=ecx",
      "cc.optlink.argn=stack",
      "cc.optlink.ret=eax",
      "cc.pascal.argn=stack_rev",
      "cc.pascal.ret=eax",
      "cc.reg.arg0=eax",
      "cc.reg.arg1=ebx",
      "cc.reg.arg2=ecx",
      "cc.reg.arg3=edx",
      "cc.reg.ret=eax",
      "cc.stdcall.argn=stack",
      "cc.stdcall.ret=eax",
      "cc.watcom.arg0=eax",
      "cc.watcom.arg1=edx",
      "cc.watcom.arg2=ebx",
      "cc.watcom.arg3=ecx",
      "cc.watcom.argn=stack",
      "cc.watcom.ret=eax",
      "cdecl=cc",
      "cdecl-fastcall-ms=cc",
      "default.cc=cdecl",
      "dlang=cc",
      "fastcall=cc",
      "optlink=cc",
      "pascal=cc",
      "reg=cc",
      "stdcall=cc",
      "watcom=cc",
      "zigns",
      "classes"
    ]
  }
}
EOF
RUN

NAME=320c64 OPEX
FILE=malloc://512280
CMDS=<<EOF
e asm.arch=tms320
e asm.cpu=c64x
wx 0041bd10
aoj~{}
EOF
EXPECT=<<EOF
[
  {
    "opcode": "b 0x20de8",
    "disasm": "b 0x20de8",
    "pseudo": "b 0x20de8 ",
    "mnemonic": "b",
    "mask": "ff000000",
    "jump": 134632,
    "sign": false,
    "id": 17,
    "opex": {
      "operands": [
        {
          "type": "imm",
          "value": 134632
        }
      ]
    },
    "addr": 0,
    "bytes": "0041bd10",
    "size": 4,
    "type": "jmp",
    "esilcost": 0,
    "cycles": 0,
    "failcycles": 0,
    "delay": 0,
    "stackptr": 0,
    "family": "cpu"
  }
]
EOF
RUN

NAME=320c64 pseudo
FILE=bins/elf/ld-2.27.so
CMDS=<<EOF
e asm.arch=tms320
e asm.cpu=c64x
e asm.pseudo=true
pi~=
EOF
EXPECT=<<EOF
a17 = (half) 0x13cf
a28 = 0 ext a0 .. 0
b23:b22 = (word)*a1++[12]
a4 = 2 ext a0 .. 0x1a
a26 = 0x4988
a4 = 0x12 .bitset a20 .. 0x12
a13:a12 = (word)*-a18[a12]
a17 = a31 avg a0
b22 = (word)*+b14[0x3da6]
a4 = (half)*+b15[0x49]
a25 = 8 ext a21 .. 0x10
a = a8 ~ a21
a16 = a23 * a25
b17 = (half)*+b15[0xd15]
a16 = (half)*+b14[0x0]
*+b15[0x6c41] = (word)b19
b8 = (byte)*+b14[0x660f]
b12 = (byte)*+b14[0x2e0f]
b12 = (byte)*+b14[0x2e0f]
a0 = 0x1a .bitset a20 .. 0x1a
a22 = 9 .bitclear a17 .. 9
a10 = 0xe ext a12 .. 0
a7 = 0 ext a27 .. 0x10
a22 = 0x18 ext a29 .. 8
*+b14[0x488b] = (byte)b0
a14 = 1 ext a17 .. 4
a17 = (byte)*a3--[10]
b16 = (half) -0x2c00
b4 = (half)*+b15[0x488d]
a6 = (half) 1
a30 = 0 ext a0 .. 0
a23:a22 = 1 + a20:a19
a20 = (half)*-a23[a18]
b8 += 0x2463
*-a1[14] = (word)a17
a16 = 0x1a ext a0 .. 0x11
a23 = 0x1c ext a16 .. 0x10
*+b14[0x5b1] = (word)b26
a4 = 2 ext a0 .. 0x13
b19 = 0x1a .bitset b30 .. 0x1a
b9 = (half)*+b15[0xb05]
a10 = 0x10 ext a8 .. 0
a26 = (byte)*-a5[15]
b0 = 2 .bitset b0 .. 2
a30 = (word)*+b15[0x4883]
*+b15[0x47c1] = (word)b17
*+b15[0x7fff] = (word)b31
a1 = a16 * a15
*-a3[a7] = (word)b1
a10 = 8 ext a0 .. 0
a18 = max(a24, a16)
b20 = (half)*+b14[0x5bc3]
b30 = (word)*-a16[0]
a0 = 0x10 ext a15 .. 0
a2 = 8 ext a29 .. 0x18
a23:a22 = (word)*-a1[12]
b4 = 2 .bitset b0 .. 2
*+b14[0xd05] = (half)b17
a14 = 8 ext a0 .. 0
b11 = (half)*+b14[0x4948]
a9 = (half)*+b15[0x4848]
a17 = a24 * a29
a1:a0 = a0 * a0
a26 = a0 * a1
b30 = (word)*-a7[24]
a17 = 0x18 ext a2 .. 5
a10 = 0x10 ext a8 .. 0
a19 = (half)*+b15[0x5048]
a15 = a24 * a29
a17 = 0xf ext a2 .. 0x11
*a13--(a9) = (half)b27:b26
b2 = 5 * b0
a0 = 0 ext a0 .. 0
a22 = (half)*-a0[a2]
a30 = 6 ext a17 .. 2
a4 = (half) 0x6381
a24 = a0 * a1
b13 = (byte)*+b14[0x1066]
*a16++[10] = (half)a0
b19 += 0x13fc
a17 = 0xe ext a2 .. 0x15
a26 = 0xc * a3
b0 = b2 * b0
a24 = (byte)*+b14[0x508b]
a28 = 0x10 ext a8 .. 0
a18 = 1 ext a31 .. 4
a17 = (byte)*a2--[9]
a26 = a1 * a17
a28 = 1 ext a17 .. 4
a17 = (byte)*a3--[10]
a30 = (half)*a3++[24]
a17 = (byte)*a3--[11]
*+b14[0x488d] = (word)a16
b8 = (half)*-a8[a2]
a18 = a1 * a17
*+b15[0x63fc] = (word)b16
*+a19[a4] = (half)a31:a30
*-a1[14] = (word)a27
a3 = (byte)*+b14[0x4039]
b26 = (half)*+b14[0x2200]
b11 = b2 * b16
*+b14[0x505b] = (half)a8
b2 = (half)*+b14[0x5ec3]
a8 = 0 ext a0 .. 0
a14 = 0x10 ext a0 .. 0
a19 = 0xa .bitset a26 .. 0xa
*+b15[0x31c0] = (byte)b4
a0 = (half) 1
a14 = a24 * a0
a17 += 0x788
*+b14[0x405b] = (half)a3
b3:b2 = (word)*+a23[22]
b0 = (half)*+b14[0x662e]
b0 = 0x1a .bitset b20 .. 0x1a
a14 = 2 .bitset a4 .. 2
b22 = b4 - b18
a17 = 0x1b ext a2 .. 0x1f
a3 = a18 * a20
a31 = (half)*+a5[14]
a3 = 9 .bitclear a18 .. 9
a20 = 0 ext a0 .. 0
b18 = max(b24, b16)
*a3++[a24] = (half)a7:a6
*-a0[2] = (word)b0
*-a21[18] = (word)a2
a2 = (half)*+b15[0x544c]
a26 = a15 * a8
a0 = 0xa ext a21 .. 0x13
a19 = a2 * a31
a0 = 0 ext a0 .. 0
*+b15[0xf48] = (byte)b22
a27 = (half)*+b15[0x4ccc]
a25 = (half)*+b15[0x4ccc]
a19 = 0xf ext a2 .. 6
a17 = 0xe ext a2 .. 8
a7 = 0x10 ext a27 .. 1
a15 = a25 - a26
a20 = (half)*+b15[0x348]
a16 = 0xe ext a0 .. 0
a19 = (half)*-a16[a10]
a2 = (half)*a3++[29]
a26 = 2 .bitset a0 .. 2
a12 = 0xe ext a29 .. 0x18
a12 = 5 .bitclear a5 .. 5
a0 = (half)*+b14[0x0]
a16 = (half)*+b14[0x29f0]
*+b14[0x7f48] = (byte)a19
a0 = 0 ext a0 .. 0
b30 = b30 * b17
a16 = 2 .bitset a2 .. 2
a0 = 0x10 .bitset a28 .. 0x10
b3 = b15 * b16
a7:a6 = a5 * a18
EOF
RUN

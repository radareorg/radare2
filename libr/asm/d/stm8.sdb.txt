adc=addition with carry
add=addition
addw=addition word
and=binary and operation
bccm=copy carry bit to memory
bcp=bit compare
bcpl=bit complement
break=software breakpoint
bres=bit reset
bset=bit set
btjf=conditional bit test and branch if false
btjt=conditional bit test and branch if true
call=call subroutine
callf=call far subroutine
callr=call subroutine (relative)
ccf=complement carry falg
clr=clear destination byte
clrw=clear word
cp=compare
cpl=logical 1 complement
cplw=logical 1 complement word
cpw=compare word
dec=decrement
decw=decrement word
div=unsigned division
divw=unsigned divide word
exg=exchange register contents
exgw=exchange register word contents
halt=stop oscillator
inc=increment
incw=increment word
int=interrupt
iret=interrupt return
jp=absolute jump
jpf=jump far
jra=jump relative always
jrc=jump if carry
jreq=jump if equal
jrf=never jump (nop?)
jrh=jump if H=1
jrih=jump if port pin is high (1)
jril=jump if port pin is low (0)
jrm=jump if interrupts are masked
jrmi=jump if N=1
jrnc=jump if carry flag is not set
jrne=jump if not equal (Z=0)
jrnh=jump if H=0
jrnm=jump if interrupts are not masked
jrnv=jump if overflow bit is not set V=0
jrpl=jump if N=0
jrsge=signed greater or equal
jrsgt=signed greater than
jrsle=signed lesser or equal
jrslt=signed lesser than
jrugt=jump unsigned greater than
jrule=jump unsigned lesser or equal
jrv=jump if overflow bit is set
ld=load
ldf=far load
ldw=load word
mov=move a byte from a source address to a destination address
mul=unsigned multiplication
neg=negate (logical 2 complement)
negw=negate word (logical 2 complement)
nop=no operation
or=binary or
pop=pop from stack
popw=pop a word from stack
push=push to stack
pushw=push a word to stack
rcf=reset carry flag
ret=return from subroutine
retf=return from far subroutine
rim=reset interrupt mask
rlc=rotate left with carry
rlcw=rotate word left with carry
rlwa=rotate word left with a
rrc=rotate right with carry
rrcw=rotate word right with carry
rrca=rotate word right with a
rvf=reset overflow flag
sbc=substraction with carry
scf=set carry flag
sim=set interrupt mask
sll=shift left logical
sllw=shift left logical word
sra=shift right arithmetic
sraw=shift right arithmetic word
srlw=shift right logical word
srl=shift right logical
sub=substract
subw=substract word
swap=swap nibbles
swapw=swap words
tnz=test for negative or zero
tnzw=test word for negative or zero
trap=software interrupt
wfi=wait for interrupt
xor=exclusvie or
rrwa=rotate right word through a
rlwa=rotate left word through a

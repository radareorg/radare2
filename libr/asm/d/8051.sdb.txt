acall=absolute call
add=add
addc=add with carry
ajmp=absolute jump
anl=logical and
cjne=compare and jump if not equal
clr=clear
cpl=complement
da=decimal-adjust accumulator after addition
dec=decrement
div=divide accumulator by b register
djnz=decrement and jump if not zero
inc=increment
jb=jump if bit set
jbc=jump if bit is set and clear bit
jc=jump if carry is set
jmp=jump indirect
jnb=jump if bit not set
jnc=jump if carry not set
jnz=jump if accumulator not zero
jz=jump if accumulator zero
lcall=long call
ljmp=long jump
mov=move
movc=move from code or program memory to accumulator
movx=move between external memory and accumulator
mul=multiply accumulator and b register
nop=no operation
orl=logical or
pop=pop from stack
push=push onto stack
ret=return from subroutine
reti=return from interrupt
rl=rotate accumulator left
rlc=rotate accumulator left through carry
rr=rotate accumulator right
rrc=rotate accumulator right through carry
setb=set bit
sjmp=short jump (relative addr)
subb=subtract with borrow
swap=swap nibbles within the accumulator
xch=exchange
xchd=exchange low-order nibbles between accumulator and RAM location
xrl=logical exclusive-or
